<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.3.0"><dataflow id="b3928896-33c1-4169-84e7-e6e49307090b" role="top"><name>day_process</name><inputPorts><port><name>config_data</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>start_date</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>stop_date</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>MOD13</name><annotations /></port><port><name>MCD43</name><annotations /></port><port><name>mosaic_jpg</name><annotations /></port><port><name>mosaic_tif</name><annotations /></port><port><name>TIFF_MOD09_Mosaic</name><annotations /></port><port><name>TIFF_MOD09_Mosaic_vrt</name><annotations /></port></outputPorts><processors><processor><name>Generate_dates</name><inputPorts><port><name>stop_date</name><depth>0</depth></port><port><name>start_date</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>jday</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>year</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>month_str</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>day_padded</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>date_full</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="log_dir" to="log_dir" /><map from="stop_date" to="stop_date" /><map from="start_date" to="start_date" /></inputMap><outputMap><map from="day_padded" to="day_padded" /><map from="jday" to="jday" /><map from="month_str" to="month_str" /><map from="year" to="year" /><map from="date_full" to="date_full" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e

start_date=`date --date="$start_date" +%F`
stop_date=`date --date="$stop_date" +%F`
stop_date=`date --date="$stop_date +1 day" +%F`

cur_date=$start_date
pos=0
while [ "$cur_date" != "$stop_date" ] ; do
  date_full[$pos]=$cur_date 
  month_padded[$pos]=`date --date="$cur_date" +%m`
  day_padded[$pos]=`date --date="$cur_date" +%d`
  jday[$pos]=`date --date="$cur_date" +%j`
  year[$pos]=`date --date="$cur_date" +%Y`

  case "${month_padded[$pos]}" in
      "1"|"01") month_str[$pos]="JAN" ;;
      "2"|"02") month_str[$pos]="FEB" ;;
      "3"|"03") month_str[$pos]="MAR" ;;
      "4"|"04") month_str[$pos]="APR" ;;
      "5"|"05") month_str[$pos]="MAY" ;;
      "6"|"06") month_str[$pos]="JUN" ;;
      "7"|"07") month_str[$pos]="JUL" ;;
      "8"|"08") month_str[$pos]="AUG" ;;
      "9"|"09") month_str[$pos]="SEP" ;;
      "10")     month_str[$pos]="OCT" ;;
      "11")     month_str[$pos]="NOV" ;;
      "12")     month_str[$pos]="DEC" ;;
  esac

  pos=$(( $pos + 1 ))
  cur_date=`date --date="$cur_date +1 day" +%F`
done



</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stop_date</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>start_date</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>jday</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>year</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>month_str</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>day_padded</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>date_full</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="stop_date" depth="0" /><port name="start_date" depth="0" /><port name="log_dir" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Config_parser</name><inputPorts><port><name>config_data</name><depth>0</depth></port></inputPorts><outputPorts><port><name>config</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.ConfigParserActivity</class><inputMap><map from="config_data" to="config_data" /></inputMap><outputMap><map from="config" to="config" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.EmptyActivityConfig xmlns="" /></configBean><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.BoringNodeAnnotation">
        <text>outputs</text>
      </annotationBean>
      <date>2012-01-31 10:35:03.777 NOVT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config_data" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Tile_params</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>H</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>tile_name</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>V</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="log_dir" to="log_dir" /><map from="config" to="config" /></inputMap><outputMap><map from="V" to="V" /><map from="tile_name" to="tile_name" /><map from="H" to="H" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e

index=0
for f in `ls $PGE_SUITE_BASE/etc/tiles/tile_*.conf` ; do
  generate="NO"
  source $f
  if [ "$generate" == "YES" ] ; then
    H[$index]=$H_param
    V[$index]=$V_param
    tile_name[$index]=h${H_param}v${V_param}
    index=$[$index+1]
  fi
done</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>H</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>tile_name</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>V</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><port name="log_dir" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Sat_day_dir</name><inputPorts><port><name>jday</name><depth>0</depth></port><port><name>year</name><depth>0</depth></port><port><name>out_root</name><depth>0</depth></port><port><name>log_root</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>day_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>day_log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="log_root" to="log_root" /><map from="out_root" to="out_root" /><map from="log_dir" to="log_dir" /><map from="jday" to="jday" /><map from="year" to="year" /></inputMap><outputMap><map from="day_dir" to="day_dir" /><map from="day_log_dir" to="day_log_dir" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e

day_dir="$out_root/$year/$jday"
[ -e "$day_dir" ] &amp;&amp; rm -rf "$day_dir"
mkdir -p "$day_dir"

day_log_dir="$log_root/$year/$jday"
[ -e "$day_log_dir" ] &amp;&amp; rm -rf "$day_log_dir"
mkdir -p "$day_log_dir"</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>jday</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>year</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>out_root</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_root</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>day_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>day_log_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>5</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="log_dir" depth="0" /><dot><port name="log_root" depth="0" /><port name="out_root" depth="0" /></dot><dot><port name="year" depth="0" /><port name="jday" depth="0" /></dot></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD01_next</name><inputPorts><port><name>data</name><depth>1</depth></port></inputPorts><outputPorts><port><name>res</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="data" to="data" /></inputMap><outputMap><map from="res" to="res" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>data</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>res</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>size = data.size();
Object[] res = new Object[size];
if (size &gt; 0 ) {
  for (int i=0; i&lt;size-1; i++)
    res[i] = data.get(i+1);
  res[size-1] = "";	
}
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="data" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD01_prev</name><inputPorts><port><name>data</name><depth>1</depth></port></inputPorts><outputPorts><port><name>res</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="data" to="data" /></inputMap><outputMap><map from="res" to="res" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>data</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>res</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>size = data.size();
Object[] res = new Object[size];
if (size &gt; 0) {
  for (int i=1; i&lt;size; i++)
    res[i] = data.get(i-1);
  res[0] = "";	
}
</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="data" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>16days_window</name><inputPorts><port><name>start_date</name><depth>0</depth></port><port><name>stop_date</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>gran_startdate</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gran_stopdate</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>phased</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="log_dir" to="log_dir" /><map from="stop_date" to="stop_date" /><map from="start_date" to="start_date" /></inputMap><outputMap><map from="gran_stopdate" to="gran_stopdate" /><map from="phased" to="phased" /><map from="gran_startdate" to="gran_startdate" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e

start_date=`date --date="$start_date" +%F`
stop_date=`date --date="$stop_date" +%F`
stop_date=`date --date="$stop_date +1 day" +%F`

cur_date=$start_date
pos=0
while [ "$cur_date" != "$stop_date" ] ; do
  gran_start_jday=`date --date="$cur_date -15 days" +%-j`
  if [ $(( ( $gran_start_jday - 1 ) % 8 )) -eq 0 ] ; then
    gran_startdate[$pos]=`date --date="$cur_date - 15 days" +%F`
    gran_stopdate[$pos]=$cur_date
    if [ $(( ( $gran_start_jday - 1 ) % 16 )) -eq 0 ] ; then
      phased[$pos]="NO"
    else
      phased[$pos]="YES"
    fi
    pos=$(( $pos + 1 ))
  fi
  cur_date=`date --date="$cur_date +1 day" +%F`
done</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>start_date</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stop_date</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>gran_startdate</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>gran_stopdate</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>phased</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="start_date" depth="0" /><port name="stop_date" depth="0" /><port name="log_dir" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>16days_dir</name><inputPorts><port><name>gran_stopdate</name><depth>0</depth></port><port><name>tile_name</name><depth>0</depth></port><port><name>log_root</name><depth>0</depth></port><port><name>out_root</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>gran_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>gran_log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="gran_stopdate" to="gran_stopdate" /><map from="out_root" to="out_root" /><map from="log_root" to="log_root" /><map from="log_dir" to="log_dir" /><map from="tile_name" to="tile_name" /></inputMap><outputMap><map from="gran_log_dir" to="gran_log_dir" /><map from="gran_dir" to="gran_dir" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>day_dir=`date --date="$gran_stopdate" +%Y/%j`
gran_dir="$out_root/$day_dir/$tile_name"
gran_log_dir="$log_root/$day_dir/$tile_name"</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>gran_stopdate</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>tile_name</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_root</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>out_root</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>gran_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>gran_log_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><port name="out_root" depth="0" /><port name="log_root" depth="0" /></dot><port name="gran_stopdate" depth="0" /><port name="tile_name" depth="0" /><port name="log_dir" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD01</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>cnstr</name><depth>0</depth></port><port><name>granule_length</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>pds</name><depth>0</depth></port><port><name>starttime</name><depth>0</depth></port><port><name>stoptime</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod01_granules</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>hour</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>minute</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>mod01_metadata</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>granule_suffix</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>g_starttime</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>g_stoptime</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="starttime" to="starttime" /><map from="output_dir" to="output_dir" /><map from="cnstr" to="cnstr" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="granule_length" to="granule_length" /><map from="config" to="config" /><map from="stoptime" to="stoptime" /><map from="pds" to="pds" /></inputMap><outputMap><map from="mod01_metadata" to="mod01_metadata" /><map from="minute" to="minute" /><map from="g_stoptime" to="g_stoptime" /><map from="g_starttime" to="g_starttime" /><map from="hour" to="hour" /><map from="granule_suffix" to="granule_suffix" /><map from="mod01_granules" to="mod01_granules" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

pds_base=`basename $pds`
pds_dir=`dirname $pds`

constr_base=`basename $cnstr`
constr_dir=`dirname $cnstr`

run_id="mod01.$pds_base.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

starttime_min=`date --date=$starttime +%-M`
let "starttime_min -= $starttime_min % 5"
starttime_min=`printf %02d $starttime_min`
starttime_r=`date --date=$starttime +%Y-%m-%dT%H:${starttime_min}:00.000000`

starttime_s=`date --utc --date="$starttime_r" +%s`
stoptime_s=`date --utc --date="$stoptime" +%s`
num_granules=$(( ( $stoptime_s - $starttime_s ) / 300 + 1 ))

if [ "$sat_id" == "AM1M" ] ; then
	eng_data="ENG_DATA_LIST_TERRA_V5.0.52.3"
	mod01_mcf="MOD01.mcf"
elif [ "$sat_id" == "PM1M" ] ; then
	eng_data="ENG_DATA_LIST_AQUA_V5.0.52.3"
	mod01_mcf="MYD01.mcf"
else
	echo "Unknown satellite" &gt;&amp;2
	exit 1
fi

print_output_lun() {
  local lun=$1 num=$2
  for i in `seq 1 $num` ; do 
    local r=$(( $num - $i + 1 ))
    local g="${run_id}_${i}.hdf"
    echo "$lun|${g}|||${g}|${g}.met|${r}"
  done
}

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
#input PDS level 0 files, use LUN 599002 if working with one file only
599002|${constr_base}|${constr_dir}||${constr_base}|${constr_base}|2
599002|${pds_base}|${pds_dir}||${pds_base}|${pds_base}|1
#
# Static inputs (but rarely updated)
#
599003|${eng_data}|${ANC_BASE}/PGE01||${eng_data}|${eng_data}|1
500500|${mod01_mcf}|${ANC_BASE}/PGE01||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD01 output files
$(print_output_lun 500100 $num_granules)
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! $log_dir
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
10258|Collection Start Time  (UTC)|${starttime}Z
10259|Collection Stop Time  (UTC)|${stoptime}Z
#
# Static params
503000|Length of L1A granules in minutes|5
504000|Scan rate for L1A granule|1.47718144
505000|L1A LocalVersionId|5.0.0
599004|MOD_PR01 LUT RCS Revision|5.1
600001|Geolocation LocalVersionId|5.0.0
600280|Source for spacecraft kinematic state|SDP Toolkit
600281|Validate Orbit Numbers|FALSE
600310|Terrain Correction Flag|TRUE
800500|PGE01 Version|5.0.51
800510|SatelliteInstrument|${sat_id}
800550|ProcessingEnvironment|ICT cluster
800600|ReprocessingActual|processed once
800605|ReprocessingPlanned|further update is anticipated
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|0
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
!  ${temp_dir}
?   TEMPORARY I/O
!  ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
export LD_LIBRARY_PATH="$PGE_SUITE_BASE/opt/gcc-4.7.2/lib64:$PGE_SUITE_BASE/opt/gcc-4.7.2/lib:$LD_LIBRARY_PATH"
$PGE_SUITE_BASE/bin/MOD_PR01.exe &gt; $log_dir/trace 2&gt;&amp;1

# Rename files &amp; make outputs
declare -a mod01_granules
declare -a mod01_metadata
declare -a hour
declare -a minute
declare -a granule_suffix

get_metadata_val() {
  local f=$1 v=$2
  sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

gpos=0
for i in `seq 1 $num_granules` ; do
  granule_temp="${output_dir}/${run_id}_$i.hdf"
  if [ -e $granule_temp ] &amp;&amp; [ -e $granule_temp.met ] ; then
    granule_base=`get_metadata_val $granule_temp.met LOCALGRANULEID`
    if [ -z "$granule_base" ] ; then 
      echo "Error with granule" &gt;&amp;2
      continue
    fi
    granule_full=${output_dir}/${granule_base}
    granule_startdate=`get_metadata_val $granule_temp.met RANGEBEGINNINGDATE`
    granule_starttime=`get_metadata_val $granule_temp.met RANGEBEGINNINGTIME`
    granule_start=${granule_startdate}T${granule_starttime}
    granule_stopdate=`get_metadata_val $granule_temp.met RANGEENDINGDATE`
    granule_stoptime=`get_metadata_val $granule_temp.met RANGEENDINGTIME`
    granule_stop=${granule_stopdate}T${granule_stoptime}

	granule_start_nano=`date --utc --date="$granule_start" +%s.%N`
	granule_stop_nano=`date --utc --date="$granule_stop" +%s.%N`
	granule_good=`echo "(${granule_stop_nano} - ${granule_start_nano}) &gt; 5" | bc`
	if [ "$granule_good" -eq 1 ] ; then
    	mv "$granule_temp" "$granule_full"
	    mv "$granule_temp.met" "$granule_full.met"

    	mod01_granules[$gpos]="$granule_full"
	    mod01_metadata[$gpos]="$granule_full.met"
    	hour[$gpos]=`date --date=$granule_start +%H`
	    minute[$gpos]=`date --date=$granule_start +%M`
	    granule_suffix[$gpos]=`date --date=$granule_start +%Y%j.%H%M`
		g_starttime[$gpos]=$granule_start
		g_stoptime[$gpos]=$granule_stop

	    gpos=$(( $gpos + 1 ))
	else
		echo "Granule $granule_full is too small, skipping" &gt;&amp;2
	fi
  fi
done

rm $pds
rm -rf "$temp_dir"
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>pds</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>starttime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stoptime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>granule_length</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>cnstr</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod01_granules</name>
      <file>true</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod01_metadata</name>
      <file>true</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>hour</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>minute</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>granule_suffix</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>g_starttime</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>g_stoptime</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="output_dir" depth="0" /><port name="cnstr" depth="0" /><port name="granule_length" depth="0" /><port name="log_dir" depth="0" /><port name="stoptime" depth="0" /><port name="starttime" depth="0" /><port name="pds" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD02</name><inputPorts><port><name>mod01_cur</name><depth>0</depth></port><port><name>mod01_next</name><depth>0</depth></port><port><name>mod01_prev</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>mod03</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod021km</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>mod02hkm</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>mod02qkm</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="mod01_cur" to="mod01_cur" /><map from="log_dir" to="log_dir" /><map from="mod01_prev" to="mod01_prev" /><map from="config" to="config" /><map from="mod03" to="mod03" /><map from="mod01_next" to="mod01_next" /></inputMap><outputMap><map from="mod02qkm" to="mod02qkm" /><map from="mod02hkm" to="mod02hkm" /><map from="mod021km" to="mod021km" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

mod01_cur_base=`basename $mod01_cur`
run_id="mod02.$mod01_cur_base.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        [ -f $f ] || continue
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
		echo "no-file"
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

mod02qkm_temp="MOD02QKM.${run_id}.hdf"
mod02hkm_temp="MOD02HKM.${run_id}.hdf"
mod021km_temp="MOD021KM.${run_id}.hdf"
mod02obc_temp="MOD02OBC.${run_id}.hdf"

if [ "$sat_id" == "AM1M" ] ; then
	emissive_lut="MOD02_Emissive_LUTs.hdf.V5.0.46.56"
	qa_lut="MOD02_QA_LUTs.hdf.V5.0.46.56"
	reflective_lut="MOD02_Reflective_LUTs.hdf.V5.0.46.56"
	lut_version="5.0.46.56_Terra"
	pge_version="5.0.46"
	mod02qkm_mcf="MOD02QKM.mcf"
	mod02hkm_mcf="MOD02HKM.mcf"
	mod021km_mcf="MOD021KM.mcf"
	mod02obc_mcf="MOD02OBC.mcf"
elif [ "$sat_id" == "PM1M" ] ; then
	emissive_lut="MYD02_Emissive_LUTs.hdf.V5.0.41.11"
	qa_lut="MYD02_QA_LUTs.hdf.V5.0.41.11"
	reflective_lut="MYD02_Reflective_LUTs.hdf.V5.0.41.11"
	lut_version="5.0.41.11_Aqua"
	pge_version="5.0.41"
	mod02qkm_mcf="MYD02QKM.mcf"
	mod02hkm_mcf="MYD02HKM.mcf"
	mod021km_mcf="MYD021KM.mcf"
	mod02obc_mcf="MYD02OBC.mcf"
else
	echo "Unknown satellite" &gt;&amp;2
	exit 1
fi

stat $mod01_cur
ls -la `dirname $mod01_cur`
stat $mod01_cur

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# input MOD01 hdf files
$(print_files_lun 500000 "${mod01_prev}")
$(print_files_lun 500001 "${mod01_cur}")
$(print_files_lun 500002 "${mod01_next}")
#
# input MOD03
$(print_files_lun 600000 ${mod03})
#
#
# Static inputs (but rarely updated)
#
# LUTs
700050|${reflective_lut}|${ANC_BASE}/PGE02||${reflective_lut}|${reflective_lut}|1
700060|${emissive_lut}|${ANC_BASE}/PGE02||${emissive_lut}|${emissive_lut}|1
700070|${qa_lut}|${ANC_BASE}/PGE02||${reflective_lut}|${reflective_lut}|1
#
700250|${mod02qkm_mcf}|${ANC_BASE}/PGE02||||1
700251|${mod02hkm_mcf}|${ANC_BASE}/PGE02||||1
700252|${mod021km_mcf}|${ANC_BASE}/PGE02||||1
700253|${mod02obc_mcf}|${ANC_BASE}/PGE02||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD03 output files
700000|${mod02qkm_temp}|||||1
700001|${mod02hkm_temp}|||||1
700002|${mod021km_temp}|||||1
700010|${mod02obc_temp}|${temp_dir}||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
700200|ECS METADATA|700100:1
700201|ECS METADATA|700101:1
700202|ECS METADATA|700102:1
#
# Static params
800500|PGE02 Version|${pge_version}
800510|SatelliteInstrument|${sat_id}
800550|ProcessingEnvironment|ICT cluster
800605|ReprocessingPlanned|further update is anticipated
800600|ReprocessingActual|processed once
800610|MCSTLUTVersion|${lut_version}
800615|Write_Night_Mode_HiRes_Data|0
800620|ProcessingCenter|MODAPS
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|0
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
if [ "$sat_id" == "AM1M" ] ; then
	$PGE_SUITE_BASE/bin/MOD_PR02.exe
elif [ "$sat_id" == "PM1M" ] ; then
	$PGE_SUITE_BASE/bin/MOD_PR02AQUA.exe
else
	echo "Unknown satellite" &gt;&amp;2
	exit 1
fi

# Rename files &amp; make outputs
mod02qkm=`rename_output "$mod02qkm_temp" "$output_dir"`
mod02qkm_metadata="$mod02qkm.met"
[ -f $mod02qkm_metadata ] || mod02qkm_metadata="no-file"
	
mod02hkm=`rename_output "$mod02hkm_temp" "$output_dir"`
mod02hkm_metadata="$mod02hkm.met"
[ -f $mod02hkm_metadata ] || mod02hkm_metadata="no-file"

mod021km=`rename_output "$mod021km_temp" "$output_dir"`
mod021km_metadata="$mod01qkm.met"
[ -f $mod021km_metadata ] || mod021km_metadata="no-file"

rm -rf $temp_dir

if ! [ -f "$mod021km" ] ; then
	echo "Can't find MOD021KM file" &gt;&amp;2
	exit 1
fi</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod01_cur</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod01_prev</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod01_next</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod02hkm</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod02qkm</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod021km</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod02hkm_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod02qkm_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod021km_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="mod01_prev" depth="0" /><port name="mod01_next" depth="0" /><port name="mod03" depth="0" /><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /><port name="mod01_cur" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD03</name><inputPorts><port><name>mod01_granule</name><depth>0</depth></port><port><name>mod01_metadata</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>apid957</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod03</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="mod01_metadata" to="mod01_metadata" /><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="mod01_granule" to="mod01_granule" /><map from="log_dir" to="log_dir" /><map from="apid957" to="apid957" /><map from="config" to="config" /></inputMap><outputMap><map from="mod03" to="mod03" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

mod01_granule_base=`basename $mod01_granule`
mod01_granule_dir=`dirname $mod01_granule`
mod01_metadata_base=`basename $mod01_metadata`
mod01_metadata_dir=`dirname $mod01_metadata`

run_id="mod03.$mod01_granule_base.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
  local f=$1 v=$2
  sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

get_metadata_num_val() {
  local f=$1 v=$2
  sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\(.*\)/\1/p" "$f"
}

starttime="`get_metadata_val $mod01_metadata RANGEBEGINNINGDATE`T`get_metadata_val $mod01_metadata RANGEBEGINNINGTIME`Z"
stoptime="`get_metadata_val $mod01_metadata RANGEENDINGDATE`T`get_metadata_val $mod01_metadata RANGEENDINGTIME`Z"

ea_source="SDP Toolkit"
if [ "$sat_id" == "AM1M" ] ; then
	eng_data="ENG_DATA_LIST_TERRA_V5.0.52.11"
	maneuver_data="maneuver_terra.coeff_V5.0.52.11"
	maneuver_revision="5.62.1.64"
	parameter_revision="5.10.1.3"
	mod01_mcf="MOD01.mcf"
	mod03_mcf="MOD03.mcf"
	# Trying to load definitive attitude &amp; ephemeris files
	# Without them terra works quite fine
	ephemeris_data=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh \
		terra-eph $starttime $stoptime`
	attitude_data=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh \
		terra-att $starttime $stoptime`
	if [ -z "$ephemeris_data" ] || [ -z "$attitude_data" ] ; then
		ea_source="MODIS Packet"
	fi
elif [ "$sat_id" == "PM1M" ] ; then
	eng_data="ENG_DATA_LIST_AQUA_V5.0.52.11"
	maneuver_data="maneuver_aqua.coeff_V5.0.52.11"
	maneuver_revision="5.56.1.77"
	parameter_revision="5.7.1.3"
	mod01_mcf="MYD01.mcf"
	mod03_mcf="MYD03.mcf"
	# Trying to load definitive attitude &amp; ephemeris files
	ephemeris_data=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh \
		aqua-eph $starttime $stoptime`
	attitude_data=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh \
		aqua-att $starttime $stoptime`
	# If definitive is not found loading tle &amp; computing with gbad
	if [ -z "$ephemeris_data" ] || [ -z "$attitude_data" ] ; then
		ephemeris_data=$temp_dir/ephemeris
		attitude_data=$temp_dir/attitude
		tle=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh tle ${starttime%Z}`
		if [ -z "$tle" ] ; then
			$PGE_SUITE_BASE/bin/aqua_main \
				-configfile /dev/null \
				-packetfile "$apid957" \
				-ephemerisfile "$ephemeris_data" \
				-attitudefile "$attitude_data"
		else
			$PGE_SUITE_BASE/bin/aqua_main \
				-configfile /dev/null \
				-packetfile "$apid957" \
				-ephemerisfile "$ephemeris_data" \
				-attitudefile "$attitude_data" \
				-noradfile "$tle"
		fi
	fi
else
	echo "Unknown satellite" &gt;&amp;2
	exit 1
fi

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

mod03_temp="$run_id.hdf"

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# input MOD01 hdf file and metadata
500100|${mod01_granule_base}|${mod01_granule_dir}||${mod01_granule_base}|${mod01_granule_base}|1
#
# attitude &amp; ephemeris files of the path. terra version, aqua is different
$(print_files_lun 10501 "$ephemeris_data")
$(print_files_lun 10502 "$attitude_data")
#
# Static inputs (but rarely updated)
#
599003|${eng_data}|${ANC_BASE}/PGE01||${eng_data}|${eng_data}|1
600002|${maneuver_data}|${ANC_BASE}/PGE01||${maneuver_data}|${maneuver_data}|1
600020|MOD03LUT.coeff_V5.0.52.11|${ANC_BASE}/PGE01||MOD03LUT.coeff_V5.0.52.11|MOD03LUT.coeff_V5.0.52.11|2
600020|MYD03LUT.coeff_V5.0.52.11|${ANC_BASE}/PGE01||MYD03LUT.coeff_V5.0.52.11|MYD03LUT.coeff_V5.0.52.11|1
500500|${mod01_mcf}|${ANC_BASE}/PGE01||||1
600111|${mod03_mcf}|${ANC_BASE}/PGE01||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD03 output files
600000|${mod03_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
10258|Collection Start Time  (UTC)|${starttime}
10259|Collection Stop Time  (UTC)|${stoptime}
#
# Static params
503000|Length of L1A granules in minutes|5
504000|Scan rate for L1A granule|1.47718144
505000|L1A LocalVersionId|5.0.0
599004|MOD_PR01 LUT RCS Revision|5.1
600001|Geolocation LocalVersionId|5.0.0
600003|Maneuver list RCS Revision|${maneuver_revision}
600021|Parameter file  RCS Revision|${parameter_revision}
600280|Source for spacecraft kinematic state|${ea_source}
600281|Validate Orbit Numbers|FALSE
600310|Terrain Correction Flag|TRUE
800500|PGE01 Version|5.0.51
800510|SatelliteInstrument|${sat_id}
800550|ProcessingEnvironment|ICT cluster
800600|ReprocessingActual|processed once
800605|ReprocessingPlanned|further update is anticipated
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|0
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

for f in $attitude_data ; do 
  if ! [ -f "$f" ] ; then
    echo "Can't find attitude data $f"
    rm -rf $temp_dir
    exit 1
  fi
done
for f in $ephemeris_data ; do 
  if ! [ -f "$f" ] ; then
    echo "Can't find ephemeris data $f"
    rm -rf $temp_dir
    exit 1
  fi
done

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
$PGE_SUITE_BASE/bin/MOD_PR03.exe

# Rename files &amp; make outputs
mod03_temp_full="${output_dir}/${mod03_temp}"
if [ -e $mod03_temp_full ] &amp;&amp; [ -e $mod03_temp_full.met ] ; then
  missing_data=`get_metadata_num_val $mod03_temp_full.met QAPERCENTMISSINGDATA`
  if [ "$missing_data" -gt 50 ] ; then
    echo "Error with granule, too much missing data" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
  fi
  mod03_base=`get_metadata_val $mod03_temp_full.met LOCALGRANULEID`
  if [ -z "$mod03_base" ] ; then 
    echo "Error with granule" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
  fi
  mod03=${output_dir}/${mod03_base}
  mod03_metadata=$mod03.met
  mv $mod03_temp_full $mod03
  mv $mod03_temp_full.met $mod03_metadata
else
	echo "Can't find MOD03 file" &gt;&amp;2
	rm -rf $temp_dir
	exit 1
fi
rm -rf "$temp_dir"</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod01_granule</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod01_metadata</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>apid957</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod03</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod03_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><prefix><port name="apid957" depth="0" /><dot><port name="mod01_granule" depth="0" /><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /><port name="mod01_metadata" depth="0" /></dot></prefix></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MODPT</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod03</name><depth>2</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>v</name><depth>0</depth></port><port><name>h</name><depth>0</depth></port></inputPorts><outputPorts><port><name>modpthkm</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>modpt1kd</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>modptqkm</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="v" to="v" /><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mod03" to="mod03" /><map from="h" to="h" /></inputMap><outputMap><map from="modpt1kd" to="modpt1kd" /><map from="modptqkm" to="modptqkm" /><map from="modpthkm" to="modpthkm" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="modpt.`hostname`.`date +%s`".$$
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1 files
    shift
    files=`for f in $@ ; do echo $f ; done | sort --reverse`
    for f in $files ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}


rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

if [ "$sat_id" == "AM1M" ] ; then
    sat_prefix="MOD"
elif [ "$sat_id" == "PM1M" ] ; then
    sat_prefix="MYD"
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

tile_id="510${h}0${v}"

modpt1kd_temp=${sat_prefix}PT1KD.$run_id.hdf
modpt1kn_temp=${sat_prefix}PT1KN.$run_id.hdf
modpthkm_temp=${sat_prefix}PTHKM.$run_id.hdf
modptqkm_temp=${sat_prefix}PTQKM.$run_id.hdf

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 600000 "${mod03[@]}")
#
# Static inputs (but rarely updated)
#
# MCF
299250|${sat_prefix}PTQKM.mcf|${ANC_BASE}/PGE12||||1
299251|${sat_prefix}PTHKM.mcf|${ANC_BASE}/PGE12||||1
299252|${sat_prefix}PT1KD.mcf|${ANC_BASE}/PGE12||||1
299253|${sat_prefix}PT1KN.mcf|${ANC_BASE}/PGE12||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
299009|${modpt1kn_temp}|||||1
299010|${modpt1kd_temp}|||||1
299011|${modpthkm_temp}|||||1
299012|${modptqkm_temp}|||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
200098|QALOG LUNS|298000,299010,299011,299012
200200|ECS METADATA|200100:1
200201|ECS METADATA|200100:2
200202|ECS METADATA|200100:3
200203|ECS METADATA|200100:4
203112|DO_COMPRESSION|Yes
210304|NRT|N
299100|TILEID|${tile_id}
299101|TILEMODE|Day
299102|MAXOUTPUTRES|250m
299103|DEEPOCNFLAG|No
299104|coverage_min|1.0
299105|layer_1st_sel|maximum observation coverage
299106|cov_cal_method|volume
299107|keep_all|No
299108|ranking|No
299109|PNTRFORMAT|compact
800503|ReprocessingPlanned value|further update is anticipated
800504|ReprocessingActual value|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.0.17
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
#TODO
$PGE_SUITE_BASE/bin/MOD_PRMGPNTR.exe

# Rename files &amp; make outputs
modpt1kd=`rename_output "$modpt1kd_temp" "$output_dir"`
if ! [ -z "$modpt1kd" ] ; then
    modpt1kd_metadata="$modpt1kd.met"
else
    echo "Can't find MODPT1KD file" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

modpthkm=`rename_output "$modpthkm_temp" "$output_dir"`
if ! [ -z "$modpthkm" ] ; then
    modpthkm_metadata="$modpthkm.met"
else
    echo "Can't find MODPT1KD file" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

modptqkm=`rename_output "$modptqkm_temp" "$output_dir"`
if ! [ -z "$modptqkm" ] ; then
    modptqkm_metadata="$modptqkm.met"
else
    echo "Can't find MODPT1KD file" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

rm -rf $temp_dir</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>h</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>v</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modpt1kd</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modpthkm</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modptqkm</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modpt1kd_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modpthkm_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modptqkm_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><prefix><port name="mod03" depth="2" /><dot><port name="output_dir" depth="0" /><port name="h" depth="0" /><port name="v" depth="0" /><port name="log_dir" depth="0" /></dot></prefix></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD09GHK</name><inputPorts><port><name>modpthkm</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>mod09</name><depth>2</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod09ghk</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="mod09" to="mod09" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="modpthkm" to="modpthkm" /></inputMap><outputMap><map from="mod09ghk" to="mod09ghk" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>product_id=R

source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="modmggad.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}


rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

if [ "$sat_id" == "AM1M" ] ; then
    sat_prefix="MOD"
elif [ "$sat_id" == "PM1M" ] ; then
    sat_prefix="MYD"
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

modmggad_temp=${sat_prefix}MGGAD.$run_id.hdf
modmggan_temp=${sat_prefix}MGGAN.$run_id.hdf
mod09gqk_temp=${sat_prefix}09GQK.$run_id.hdf
mod09ghk_temp=${sat_prefix}09GHK.$run_id.hdf
mod09gst_temp=${sat_prefix}09GST.$run_id.hdf
mod14gd_temp=${sat_prefix}14GD.$run_id.hdf
mod14gn_temp=${sat_prefix}14GN.$run_id.hdf
mod10l2g_temp=${sat_prefix}10L2G.$run_id.hdf
mod29gd_temp=${sat_prefix}29GD.$run_id.hdf
mod29gn_temp=${sat_prefix}29GN.$run_id.hdf
modtbgd_temp=${sat_prefix}TBGD.$run_id.hdf
modtbgn_temp=${sat_prefix}TBGN.$run_id.hdf

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 299009 "${modpt1kn}")
#$(print_files_lun 299009 "${modptpgn}") ##polar
$(print_files_lun 299010 "${modpt1kd}")
#$(print_files_lun 299010 "${modptpgd}") ##polar
$(print_files_lun 299011 "${modpthkm}")
#$(print_files_lun 299011 "${modptphd}") ##polar
$(print_files_lun 299012 "${modptqkm}")
$(print_files_lun 600000 "${mod03[@]}")
$(print_files_lun 209000 "${mod09[@]}")
$(print_files_lun 214000 "${mod14[@]}")
$(print_files_lun 210100 "${mod10[@]}")
$(print_files_lun 229100 "${mod29[@]}")
#
# Static inputs (but rarely updated)
#
# MCF
298890|${sat_prefix}MGGAD.mcf|${ANC_BASE}/PGE12||||1
298891|${sat_prefix}MGGAN.mcf|${ANC_BASE}/PGE12||||1
298892|${sat_prefix}09GHK.mcf|${ANC_BASE}/PGE12||||1
298893|${sat_prefix}09GQK.mcf|${ANC_BASE}/PGE12||||1
298894|${sat_prefix}09GST.mcf|${ANC_BASE}/PGE12||||1
298895|${sat_prefix}14GD.mcf|${ANC_BASE}/PGE12||||1
298896|${sat_prefix}14GN.mcf|${ANC_BASE}/PGE12||||1
298910|${sat_prefix}TBGD.mcf|${ANC_BASE}/PGE12||||1
298911|${sat_prefix}TBGN.mcf|${ANC_BASE}/PGE12||||1
298897|${sat_prefix}10L2G.mcf|${ANC_BASE}/PGE12||||1
#298897|${sat_prefix}10PG.mcf|${ANC_BASE}/PGE12||||1 ##polar 
298898|${sat_prefix}29GD.mcf|${ANC_BASE}/PGE12||||1
298899|${sat_prefix}29GN.mcf|${ANC_BASE}/PGE12||||1
#298898|${sat_prefix}29PGD.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#298899|${sat_prefix}29PGN.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
298000|${modmggad_temp}|||||1
298001|${modmggan_temp}|||||1
298002|${mod09gqk_temp}|||||1
298003|${mod09ghk_temp}|||||1
298004|${mod09gst_temp}|||||1
298005|${mod14gd_temp}|||||1
298006|${mod14gn_temp}|||||1
298007|${mod10l2g_temp}|||||1
298008|${mod29gd_temp}|||||1
298009|${mod29gn_temp}|||||1
298010|${modtbgd_temp}|||||1
298011|${modtbgn_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
200098|QALOG LUNS|298000,299010,299011,299012
200200|ECS METADATA|200100:1
200201|ECS METADATA|200100:2
200202|ECS METADATA|200100:3
200203|ECS METADATA|200100:4
203112|DO_COMPRESSION|Yes
210304|NRT|N
298800|L2GFORMAT|compact
298900|L_PRODUCT|${product_id}
298901|EXACTMATCH|N
#299100|TILEID|51009004
#299101|TILEMODE|Day
#299102|MAXOUTPUTRES|250m
#299103|DEEPOCNFLAG|No
#299104|coverage_min|1.0
#299105|layer_1st_sel|maximum observation coverage
#299106|cov_cal_method|volume
#299107|keep_all|No
#299108|ranking|No
#299109|PNTRFORMAT|compact
800503|ReprocessingPlanned value|further update is anticipated
800504|ReprocessingActual value|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.0.17
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PRMGR.exe

# Rename files &amp; make outputs
mod09ghk=`rename_output "$mod09ghk_temp" "$output_dir"`
if ! [ -z "$mod09ghk" ] ; then
    mod09ghk_metadata="$mod09ghk.met"
else
    echo "Can't find output file" &gt;&amp;2
	rm -f "$mod09ghk_temp"
    rm -rf $temp_dir
    exit 1
fi

rm -rf $temp_dir




</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modpthkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09</name>
      <type>SIMPLE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09ghk</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09ghk_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><prefix><port name="mod09" depth="2" /><dot><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /><port name="modpthkm" depth="0" /></dot></prefix></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MODMGGAD</name><inputPorts><port><name>modpt1kd</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>mod03</name><depth>2</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>modmggad</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="modpt1kd" to="modpt1kd" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mod03" to="mod03" /></inputMap><outputMap><map from="modmggad" to="modmggad" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>product_id=G

source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="modmggad.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}


rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

if [ "$sat_id" == "AM1M" ] ; then
    sat_prefix="MOD"
elif [ "$sat_id" == "PM1M" ] ; then
    sat_prefix="MYD"
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

modmggad_temp=${sat_prefix}MGGAD.$run_id.hdf
modmggan_temp=${sat_prefix}MGGAN.$run_id.hdf
mod09gqk_temp=${sat_prefix}09GQK.$run_id.hdf
mod09ghk_temp=${sat_prefix}09GHK.$run_id.hdf
mod09gst_temp=${sat_prefix}09GST.$run_id.hdf
mod14gd_temp=${sat_prefix}14GD.$run_id.hdf
mod14gn_temp=${sat_prefix}14GN.$run_id.hdf
mod10l2g_temp=${sat_prefix}10L2G.$run_id.hdf
mod29gd_temp=${sat_prefix}29GD.$run_id.hdf
mod29gn_temp=${sat_prefix}29GN.$run_id.hdf
modtbgd_temp=${sat_prefix}TBGD.$run_id.hdf
modtbgn_temp=${sat_prefix}TBGN.$run_id.hdf

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 299009 "${modpt1kn}")
#$(print_files_lun 299009 "${modptpgn}") ##polar
$(print_files_lun 299010 "${modpt1kd}")
#$(print_files_lun 299010 "${modptpgd}") ##polar
$(print_files_lun 299011 "${modpthkm}")
#$(print_files_lun 299011 "${modptphd}") ##polar
$(print_files_lun 299012 "${modptqkm}")
$(print_files_lun 600000 "${mod03[@]}")
$(print_files_lun 209000 "${mod09[@]}")
$(print_files_lun 214000 "${mod14[@]}")
$(print_files_lun 210100 "${mod10[@]}")
$(print_files_lun 229100 "${mod29[@]}")
#
# Static inputs (but rarely updated)
#
# MCF
298890|${sat_prefix}MGGAD.mcf|${ANC_BASE}/PGE12||||1
298891|${sat_prefix}MGGAN.mcf|${ANC_BASE}/PGE12||||1
298892|${sat_prefix}09GHK.mcf|${ANC_BASE}/PGE12||||1
298893|${sat_prefix}09GQK.mcf|${ANC_BASE}/PGE12||||1
298894|${sat_prefix}09GST.mcf|${ANC_BASE}/PGE12||||1
298895|${sat_prefix}14GD.mcf|${ANC_BASE}/PGE12||||1
298896|${sat_prefix}14GN.mcf|${ANC_BASE}/PGE12||||1
298910|${sat_prefix}TBGD.mcf|${ANC_BASE}/PGE12||||1
298911|${sat_prefix}TBGN.mcf|${ANC_BASE}/PGE12||||1
298897|${sat_prefix}10L2G.mcf|${ANC_BASE}/PGE12||||1
#298897|${sat_prefix}10PG.mcf|${ANC_BASE}/PGE12||||1 ##polar 
298898|${sat_prefix}29GD.mcf|${ANC_BASE}/PGE12||||1
298899|${sat_prefix}29GN.mcf|${ANC_BASE}/PGE12||||1
#298898|${sat_prefix}29PGD.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#298899|${sat_prefix}29PGN.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
298000|${modmggad_temp}|||||1
298001|${modmggan_temp}|||||1
298002|${mod09gqk_temp}|||||1
298003|${mod09ghk_temp}|||||1
298004|${mod09gst_temp}|||||1
298005|${mod14gd_temp}|||||1
298006|${mod14gn_temp}|||||1
298007|${mod10l2g_temp}|||||1
298008|${mod29gd_temp}|||||1
298009|${mod29gn_temp}|||||1
298010|${modtbgd_temp}|||||1
298011|${modtbgn_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
200098|QALOG LUNS|298000,299010,299011,299012
200200|ECS METADATA|200100:1
200201|ECS METADATA|200100:2
200202|ECS METADATA|200100:3
200203|ECS METADATA|200100:4
203112|DO_COMPRESSION|Yes
210304|NRT|N
298800|L2GFORMAT|compact
298900|L_PRODUCT|${product_id}
298901|EXACTMATCH|N
#299100|TILEID|51009004
#299101|TILEMODE|Day
#299102|MAXOUTPUTRES|250m
#299103|DEEPOCNFLAG|No
#299104|coverage_min|1.0
#299105|layer_1st_sel|maximum observation coverage
#299106|cov_cal_method|volume
#299107|keep_all|No
#299108|ranking|No
#299109|PNTRFORMAT|compact
800503|ReprocessingPlanned value|further update is anticipated
800504|ReprocessingActual value|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.0.17
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PRMGR.exe

# Rename files &amp; make outputs
modmggad=`rename_output "$modmggad_temp" "$output_dir"`
if ! [ -z "$modmggad" ] ; then
    modmggad_metadata="$modmggad.met"
else
    echo "Can't find output file" &gt;&amp;2
	rm -f "$modmggad_temp"
    rm -rf $temp_dir
    exit 1
fi

rm -rf $temp_dir



</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modpt1kd</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modmggad</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modmggad_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><prefix><port name="mod03" depth="2" /><dot><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /><port name="modpt1kd" depth="0" /></dot></prefix></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD09GST</name><inputPorts><port><name>modpt1kd</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>mod09</name><depth>2</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod09gst</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="modpt1kd" to="modpt1kd" /><map from="mod09" to="mod09" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /></inputMap><outputMap><map from="mod09gst" to="mod09gst" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>product_id=t

source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="modmggad.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}


rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

if [ "$sat_id" == "AM1M" ] ; then
    sat_prefix="MOD"
elif [ "$sat_id" == "PM1M" ] ; then
    sat_prefix="MYD"
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

modmggad_temp=${sat_prefix}MGGAD.$run_id.hdf
modmggan_temp=${sat_prefix}MGGAN.$run_id.hdf
mod09gqk_temp=${sat_prefix}09GQK.$run_id.hdf
mod09ghk_temp=${sat_prefix}09GHK.$run_id.hdf
mod09gst_temp=${sat_prefix}09GST.$run_id.hdf
mod14gd_temp=${sat_prefix}14GD.$run_id.hdf
mod14gn_temp=${sat_prefix}14GN.$run_id.hdf
mod10l2g_temp=${sat_prefix}10L2G.$run_id.hdf
mod29gd_temp=${sat_prefix}29GD.$run_id.hdf
mod29gn_temp=${sat_prefix}29GN.$run_id.hdf
modtbgd_temp=${sat_prefix}TBGD.$run_id.hdf
modtbgn_temp=${sat_prefix}TBGN.$run_id.hdf

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 299009 "${modpt1kn}")
#$(print_files_lun 299009 "${modptpgn}") ##polar
$(print_files_lun 299010 "${modpt1kd}")
#$(print_files_lun 299010 "${modptpgd}") ##polar
$(print_files_lun 299011 "${modpthkm}")
#$(print_files_lun 299011 "${modptphd}") ##polar
$(print_files_lun 299012 "${modptqkm}")
$(print_files_lun 600000 "${mod03[@]}")
$(print_files_lun 209000 "${mod09[@]}")
$(print_files_lun 214000 "${mod14[@]}")
$(print_files_lun 210100 "${mod10[@]}")
$(print_files_lun 229100 "${mod29[@]}")
#
# Static inputs (but rarely updated)
#
# MCF
298890|${sat_prefix}MGGAD.mcf|${ANC_BASE}/PGE12||||1
298891|${sat_prefix}MGGAN.mcf|${ANC_BASE}/PGE12||||1
298892|${sat_prefix}09GHK.mcf|${ANC_BASE}/PGE12||||1
298893|${sat_prefix}09GQK.mcf|${ANC_BASE}/PGE12||||1
298894|${sat_prefix}09GST.mcf|${ANC_BASE}/PGE12||||1
298895|${sat_prefix}14GD.mcf|${ANC_BASE}/PGE12||||1
298896|${sat_prefix}14GN.mcf|${ANC_BASE}/PGE12||||1
298910|${sat_prefix}TBGD.mcf|${ANC_BASE}/PGE12||||1
298911|${sat_prefix}TBGN.mcf|${ANC_BASE}/PGE12||||1
298897|${sat_prefix}10L2G.mcf|${ANC_BASE}/PGE12||||1
#298897|${sat_prefix}10PG.mcf|${ANC_BASE}/PGE12||||1 ##polar 
298898|${sat_prefix}29GD.mcf|${ANC_BASE}/PGE12||||1
298899|${sat_prefix}29GN.mcf|${ANC_BASE}/PGE12||||1
#298898|${sat_prefix}29PGD.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#298899|${sat_prefix}29PGN.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
298000|${modmggad_temp}|||||1
298001|${modmggan_temp}|||||1
298002|${mod09gqk_temp}|||||1
298003|${mod09ghk_temp}|||||1
298004|${mod09gst_temp}|||||1
298005|${mod14gd_temp}|||||1
298006|${mod14gn_temp}|||||1
298007|${mod10l2g_temp}|||||1
298008|${mod29gd_temp}|||||1
298009|${mod29gn_temp}|||||1
298010|${modtbgd_temp}|||||1
298011|${modtbgn_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
200098|QALOG LUNS|298000,299010,299011,299012
200200|ECS METADATA|200100:1
200201|ECS METADATA|200100:2
200202|ECS METADATA|200100:3
200203|ECS METADATA|200100:4
203112|DO_COMPRESSION|Yes
210304|NRT|N
298800|L2GFORMAT|compact
298900|L_PRODUCT|${product_id}
298901|EXACTMATCH|N
#299100|TILEID|51009004
#299101|TILEMODE|Day
#299102|MAXOUTPUTRES|250m
#299103|DEEPOCNFLAG|No
#299104|coverage_min|1.0
#299105|layer_1st_sel|maximum observation coverage
#299106|cov_cal_method|volume
#299107|keep_all|No
#299108|ranking|No
#299109|PNTRFORMAT|compact
800503|ReprocessingPlanned value|further update is anticipated
800504|ReprocessingActual value|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.0.17
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PRMGR.exe

# Rename files &amp; make outputs
mod09gst=`rename_output "$mod09gst_temp" "$output_dir"`
if ! [ -z "$mod09gst" ] ; then
    mod09gst_metadata="$mod09gst.met"
else
    echo "Can't find output file" &gt;&amp;2
	rm -f "$mod09gst_temp"
    rm -rf $temp_dir
    exit 1
fi

rm -rf $temp_dir




</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modpt1kd</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09</name>
      <type>SIMPLE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09gst</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09gst_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><prefix><port name="mod09" depth="2" /><dot><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="modpt1kd" depth="0" /></dot></prefix></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD09GQK</name><inputPorts><port><name>modptqkm</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>mod09</name><depth>2</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod09gqk</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="mod09" to="mod09" /><map from="log_dir" to="log_dir" /><map from="modptqkm" to="modptqkm" /><map from="config" to="config" /></inputMap><outputMap><map from="mod09gqk" to="mod09gqk" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>product_id=r

source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="modmggad.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}


rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

if [ "$sat_id" == "AM1M" ] ; then
    sat_prefix="MOD"
elif [ "$sat_id" == "PM1M" ] ; then
    sat_prefix="MYD"
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

modmggad_temp=${sat_prefix}MGGAD.$run_id.hdf
modmggan_temp=${sat_prefix}MGGAN.$run_id.hdf
mod09gqk_temp=${sat_prefix}09GQK.$run_id.hdf
mod09ghk_temp=${sat_prefix}09GHK.$run_id.hdf
mod09gst_temp=${sat_prefix}09GST.$run_id.hdf
mod14gd_temp=${sat_prefix}14GD.$run_id.hdf
mod14gn_temp=${sat_prefix}14GN.$run_id.hdf
mod10l2g_temp=${sat_prefix}10L2G.$run_id.hdf
mod29gd_temp=${sat_prefix}29GD.$run_id.hdf
mod29gn_temp=${sat_prefix}29GN.$run_id.hdf
modtbgd_temp=${sat_prefix}TBGD.$run_id.hdf
modtbgn_temp=${sat_prefix}TBGN.$run_id.hdf

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 299009 "${modpt1kn}")
#$(print_files_lun 299009 "${modptpgn}") ##polar
$(print_files_lun 299010 "${modpt1kd}")
#$(print_files_lun 299010 "${modptpgd}") ##polar
$(print_files_lun 299011 "${modpthkm}")
#$(print_files_lun 299011 "${modptphd}") ##polar
$(print_files_lun 299012 "${modptqkm}")
$(print_files_lun 600000 "${mod03[@]}")
$(print_files_lun 209000 "${mod09[@]}")
$(print_files_lun 214000 "${mod14[@]}")
$(print_files_lun 210100 "${mod10[@]}")
$(print_files_lun 229100 "${mod29[@]}")
#
# Static inputs (but rarely updated)
#
# MCF
298890|${sat_prefix}MGGAD.mcf|${ANC_BASE}/PGE12||||1
298891|${sat_prefix}MGGAN.mcf|${ANC_BASE}/PGE12||||1
298892|${sat_prefix}09GHK.mcf|${ANC_BASE}/PGE12||||1
298893|${sat_prefix}09GQK.mcf|${ANC_BASE}/PGE12||||1
298894|${sat_prefix}09GST.mcf|${ANC_BASE}/PGE12||||1
298895|${sat_prefix}14GD.mcf|${ANC_BASE}/PGE12||||1
298896|${sat_prefix}14GN.mcf|${ANC_BASE}/PGE12||||1
298910|${sat_prefix}TBGD.mcf|${ANC_BASE}/PGE12||||1
298911|${sat_prefix}TBGN.mcf|${ANC_BASE}/PGE12||||1
298897|${sat_prefix}10L2G.mcf|${ANC_BASE}/PGE12||||1
#298897|${sat_prefix}10PG.mcf|${ANC_BASE}/PGE12||||1 ##polar 
298898|${sat_prefix}29GD.mcf|${ANC_BASE}/PGE12||||1
298899|${sat_prefix}29GN.mcf|${ANC_BASE}/PGE12||||1
#298898|${sat_prefix}29PGD.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#298899|${sat_prefix}29PGN.mcf|${ANC_BASE}/PGE12||||1 ##polar 
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
298000|${modmggad_temp}|||||1
298001|${modmggan_temp}|||||1
298002|${mod09gqk_temp}|||||1
298003|${mod09ghk_temp}|||||1
298004|${mod09gst_temp}|||||1
298005|${mod14gd_temp}|||||1
298006|${mod14gn_temp}|||||1
298007|${mod10l2g_temp}|||||1
298008|${mod29gd_temp}|||||1
298009|${mod29gn_temp}|||||1
298010|${modtbgd_temp}|||||1
298011|${modtbgn_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
200098|QALOG LUNS|298000,299010,299011,299012
200200|ECS METADATA|200100:1
200201|ECS METADATA|200100:2
200202|ECS METADATA|200100:3
200203|ECS METADATA|200100:4
203112|DO_COMPRESSION|Yes
210304|NRT|N
298800|L2GFORMAT|compact
298900|L_PRODUCT|${product_id}
298901|EXACTMATCH|N
#299100|TILEID|51009004
#299101|TILEMODE|Day
#299102|MAXOUTPUTRES|250m
#299103|DEEPOCNFLAG|No
#299104|coverage_min|1.0
#299105|layer_1st_sel|maximum observation coverage
#299106|cov_cal_method|volume
#299107|keep_all|No
#299108|ranking|No
#299109|PNTRFORMAT|compact
800503|ReprocessingPlanned value|further update is anticipated
800504|ReprocessingActual value|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.0.17
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PRMGR.exe

# Rename files &amp; make outputs
mod09gqk=`rename_output "$mod09gqk_temp" "$output_dir"`
if ! [ -z "$mod09gqk" ] ; then
    mod09gqk_metadata="$mod09gqk.met"
else
    echo "Can't find output file" &gt;&amp;2
	rm -f "$mod09gqk_temp"
    rm -rf $temp_dir
    exit 1
fi

rm -rf $temp_dir



</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modptqkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09</name>
      <type>SIMPLE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09gqk</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09gqk_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><prefix><port name="mod09" depth="2" /><dot><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="modptqkm" depth="0" /></dot></prefix></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Wait_for_copy</name><inputPorts /><outputPorts /><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.WaitForCopyActivity</class><inputMap /><outputMap /><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.EmptyActivityConfig xmlns="" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>MODKMDS</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod021km</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>starttime</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod1kmds</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="starttime" to="starttime" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mod021km" to="mod021km" /></inputMap><outputMap><map from="mod1kmds" to="mod1kmds" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mokmds.`hostname`.`date +%s`.$$"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir


if [ "$sat_id" == "AM1M" ] ; then
    mod1kmds_name=MOD1KMDS.A`date --date="$starttime" +%Y%j.%H%M`.005.`date -u +%Y%j%H%M%S`.hdf
    destripe_config=destripe_config_terra.dat.v1
elif [ "$sat_id" == "PM1M" ] ; then
    mod1kmds_name=MYD1KMDS.A`date --date="$starttime" +%Y%j.%H%M`.005.$(date -u +%Y%j%H%M%S).hdf
    destripe_config=destripe_config_aqua.dat.v2
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
430100|${destripe_config}|${ANC_BASE}/PGE03||${destripe_config}|${destripe_config}|1
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
430000|${mod1kmds_name}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

mod1kmds=$output_dir/$mod1kmds_name
cp $mod021km $mod1kmds
# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PRDS.exe

rm -rf $temp_dir
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod021km</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>starttime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod1kmds</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="starttime" depth="0" /><port name="mod021km" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MODKMDS_500m</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod02hkm</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>starttime</name><depth>0</depth></port></inputPorts><outputPorts><port><name>modhkmds</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="starttime" to="starttime" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mod02hkm" to="mod02hkm" /></inputMap><outputMap><map from="modhkmds" to="modhkmds" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="modkmds500m.`hostname`.`date +%s`.$$"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

if [ "$sat_id" == "AM1M" ] ; then
    modhkmds_name=MODHKMDS.A`date --date="$starttime" +%Y%j.%H%M`.005.`date -u +%Y%j%H%M%S`.hdf
    destripe_config=MOD02HKM_destripe_config.dat.v1
elif [ "$sat_id" == "PM1M" ] ; then
    modhkmds_name=MYDHKMDS.A`date --date="$starttime" +%Y%j.%H%M`.005.$(date -u +%Y%j%H%M%S).hdf
    destripe_config=MYD02HKM_destripe_config.dat.v1
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
209999|${destripe_config}|${ANC_BASE}/PGE11||${destripe_config}|${destripe_config}|1
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
209101|${modhkmds_name}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

if [ -f $mod02hkm ] ; then
	modhkmds=$output_dir/$modhkmds_name
	cp $mod02hkm $modhkmds
	# Run PGE
	export PGS_PC_INFO_FILE="$pcf_full"
	ulimit -s 65536
	$PGE_SUITE_BASE/bin/MOD_PRDS500M.exe
else
	echo "Can't find input file" &gt;&amp;2
	modhkmds="no-file"
fi


rm -rf $temp_dir
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod02hkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>starttime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>modhkmds</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="starttime" depth="0" /><port name="mod02hkm" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD35</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod021km</name><depth>0</depth></port><port><name>mod02qkm</name><depth>0</depth></port><port><name>mod1kmds</name><depth>0</depth></port><port><name>mod03</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>starttime</name><depth>0</depth></port><port><name>stoptime</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod35</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="starttime" to="starttime" /><map from="output_dir" to="output_dir" /><map from="mod02qkm" to="mod02qkm" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="mod1kmds" to="mod1kmds" /><map from="config" to="config" /><map from="stoptime" to="stoptime" /><map from="mod03" to="mod03" /><map from="mod021km" to="mod021km" /></inputMap><outputMap><map from="mod35" to="mod35" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mod35.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
		[ ! -f $f ] &amp;&amp; continue
        local b=`basename $f`
   	    local d=`dirname $f`
       	echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

gdas=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh gfs $starttime | head -1`
eng=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh eng $starttime`
nise=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh nise $starttime`
oisst=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh oisst $starttime`

if [ -f "$oisst" ] ; then
	oisst_unzip=`basename $oisst`
	oisst_unzip=${oisst_unzip%.gz}
    oisst_unzip="$temp_dir/$oisst_unzip"
    gunzip -c "$oisst" &gt; $oisst_unzip
else
    echo "Can't find oisst data" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

ecosystem_file=ecosystem.img.v1
goge_file=goge1_2_img.v1
if [ "$sat_id" == "AM1M" ] ; then
    thresholds_file=thresholds.dat.terra.v13
    destripe_file=destripe_config_terra.dat.v1
    mod35_l2_mcf=MOD35_L2.mcf
    mod35_qc_mcf=MOD35_QC.mcf
elif [ "$sat_id" == "PM1M" ] ; then
    thresholds_file=thresholds.dat.aqua.v8
    destripe_file=destripe_config_aqua.dat.v2
    mod35_l2_mcf=MYD35_L2.mcf
    mod35_qc_mcf=MYD35_QC.mcf
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

mod35_l2_temp=MOD35_L2.${run_id}.hdf
mod35_qc_temp=MOD35_QC.${run_id}.txt

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 600000 "${mod03}")
$(print_files_lun 700000 "${mod02qkm}")
$(print_files_lun 700002 "${mod021km}")
$(print_files_lun 430000 "${mod1kmds}")
#
# ancillary
# NCEP 1 degree GDAS Final Run
$(print_files_lun 900000 "${gdas}")
# LRN 900030 is the NCEP SST ancillary data file
$(print_files_lun 900030 "${oisst_unzip}")
# NCEP 0.5 degree ice concentration
$(print_files_lun 900040 "${eng}")
# NSIDC NISE snow/ice extent
$(print_files_lun 900100 "${nise}")
#
# Static inputs (but rarely updated)
#
# Thresholds parameter file
422501|${thresholds_file}|${ANC_BASE}/PGE03||${thresholds_file}|${thresholds_file}|1
# Olson World Ecosystem Map (Global 10 minute)
900600|${ecosystem_file}|${ANC_BASE}/PGE03||${ecosystem_file}|${ecosystem_file}|1
# Olson World Ecosystem Map - global 1 km
900601|${goge_file}|${ANC_BASE}/PGE03||${goge_file}|${goge_file}|1
# L1B destriper configuration file
430100|${destripe_file}|${ANC_BASE}/PGE03||${destripe_file}|${destripe_file}|1
# MCF
422506|${mod35_l2_mcf}|${ANC_BASE}/PGE03||||1
422507|${mod35_qc_mcf}|${ANC_BASE}/PGE03||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD07 output files
422500|${mod35_l2_temp}|||||1
422551|${mod35_qc_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
# Static params
10258|Collection Start Time (UTC) |${starttime}
10259|Collection Stop Time  (UTC) |${stoptime}
#
# Runtime parameter referring back to non-HDF file (output debug)
422508|RP Reference to MOD_PR35.qc|422551:1
#
# Inventory RP specifications
424000|MOD35_Num_InvMet_RP_Pairs|4
424001|Inventory_RP_Name_1 |REPROCESSINGACTUAL
424002|Inventory_RP_Value_1|processed once
424003|Inventory_RP_Name_2 |REPROCESSINGPLANNED
424004|Inventory_RP_Value_2|further update is anticipated
424005|Inventory_RP_Name_3 |LOCALVERSIONID
424006|Inventory_RP_Value_3|005
424007|Inventory_RP_Name_4 |PGEVERSION
424008|Inventory_RP_Value_4|5.3.1
#
# Archive RP specifications
424100|MOD35_Num_ArchMet_RP_Pairs|7
424101|Archive RP_Name_1 |ALGORITHMPACKAGEACCEPTANCEDATE
424102|Archive_RP_Value_1|June 1997
424103|Archive RP_Name_2 |ALGORITHMPACKAGEMATURITYCODE
424104|Archive_RP_Value_2|at-launch
424105|Archive RP_Name_3 |ALGORITHMPACKAGENAME
424106|Archive_RP_Value_3|ATBD-MOD-06
424107|Archive RP_Name_4 |ALGORITHMPACKAGEVERSION
424108|Archive_RP_Value_4|2
424109|Archive RP_Name_5 |INSTRUMENTNAME
424110|Archive_RP_Value_5|Moderate Resolution Imaging Spectroradiometer
424111|Archive RP_Name_6 |PROCESSINGENVIRONMENT
424112|Archive_RP_Value_6|ICT cluster
424113|Archive RP_Name_7 |PRODUCTIONHISTORY
424114|Archive_RP_Value_7|PGE03:5.3.1
#
# Debug and processing interval User Defined Runtime Params
424300|UW DEBUG; 0 to 4, no output to reams|0
424301|Processing Range Begin Line|0
424302|Processing Range Number of Lines|0
424303|Processing Range Begin Element|0
424304|Processing Range Number of Elements|0
#
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.3.1
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PR35.exe


# Rename files &amp; make outputs
mod35=`rename_output "$mod35_l2_temp" "$output_dir"`
if ! [ -z "$mod35" ] ; then
    mod35_metadata="$mod35.met"
else
    echo "Can't find MOD35" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi
mod35_qc=`rename_output "$mod35_qc_temp" "$output_dir"`

rm -rf $temp_dir</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod1kmds</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod02qkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod021km</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>starttime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stoptime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod35</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod35_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="mod03" depth="0" /><port name="mod021km" depth="0" /><port name="mod1kmds" depth="0" /><port name="mod02qkm" depth="0" /><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="starttime" depth="0" /><port name="stoptime" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD09</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod35</name><depth>0</depth></port><port><name>mod1kmds</name><depth>0</depth></port><port><name>modhkmds</name><depth>0</depth></port><port><name>mod02qkm</name><depth>0</depth></port><port><name>mod03</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>starttime</name><depth>0</depth></port><port><name>stoptime</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod09</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="mod02qkm" to="mod02qkm" /><map from="output_dir" to="output_dir" /><map from="starttime" to="starttime" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="mod1kmds" to="mod1kmds" /><map from="config" to="config" /><map from="modhkmds" to="modhkmds" /><map from="stoptime" to="stoptime" /><map from="mod03" to="mod03" /><map from="mod35" to="mod35" /></inputMap><outputMap><map from="mod09" to="mod09" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mod09.`hostname`.`date +%s`.$$"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

gdas=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh gfs $starttime`

if [ "$sat_id" == "AM1M" ] ; then
    mod09_mcf=MOD09.mcf
    mod09crs_mcf=MOD09CRS.mcf
    mod09idn_mcf=MOD09IDN.mcf
    mod09idt_mcf=MOD09IDT.mcf
    mod09ids_mcf=MOD09IDS.mcf
elif [ "$sat_id" == "PM1M" ] ; then
    mod09_mcf=MYD09.mcf
    mod09crs_mcf=MYD09CRS.mcf
    mod09idn_mcf=MYD09IDN.mcf
    mod09idt_mcf=MYD09IDT.mcf
    mod09ids_mcf=MYD09IDS.mcf
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

mod09_temp="MOD09.${run_id}.hdf"

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 600000 "${mod03}")
$(print_files_lun 422500 "${mod35}")
$(print_files_lun 430000 "${mod1kmds}")
$(print_files_lun 209101 "${modhkmds}")
$(print_files_lun 700000 "${mod02qkm}")
#
# ancillary
$(print_files_lun 900000 "${gdas}")
#
# Static inputs (but rarely updated)
#
209501|ANC_OORT_WV.CLIMATOLOGY.v2.1|${ANC_BASE}/PGE11||ANC_OORT_WV.CLIMATOLOGY.v2.1|ANC_OORT_WV.CLIMATOLOGY.v2.1|1
209504|1_km_z8.hdf|${ANC_BASE}/PGE11||1_km_z8.hdf|1_km_z8.hdf|1
209505|landcov_8km.v1|${ANC_BASE}/PGE11||landcov_8km.v1|landcov_8km.v1|1
209400|tauray-modis.ASC|${ANC_BASE}/PGE11||tauray-modis.ASC|tauray-modis.ASC|1
209401|gascoef-modis.ASC|${ANC_BASE}/PGE11||gascoef-modis.ASC|gascoef-modis.ASC|1
209402|ANGLE_NEW.hdf|${ANC_BASE}/PGE11||ANGLE_NEW.hdf|ANGLE_NEW.hdf|1
209403|RES_LUT_V3.0-SMOKELABS.hdf|${ANC_BASE}/PGE11||RES_LUT_V3.0-SMOKELABS.hdf|RES_LUT_V3.0-SMOKELABS.hdf|1
209404|TRANS_LUT_V3.0-SMOKELABS.ASCII|${ANC_BASE}/PGE11||TRANS_LUT_V3.0-SMOKELABS.ASCII|TRANS_LUT_V3.0-SMOKELABS.ASCII|1
209405|AERO_LUT_V3.0-SMOKELABS.ASCII|${ANC_BASE}/PGE11||AERO_LUT_V3.0-SMOKELABS.ASCII|AERO_LUT_V3.0-SMOKELABS.ASCII|1
209406|RES_LUT_V3.0-SMOKEHABS.hdf|${ANC_BASE}/PGE11||RES_LUT_V3.0-SMOKEHABS.hdf|RES_LUT_V3.0-SMOKEHABS.hdf|1
209407|TRANS_LUT_V3.0-SMOKEHABS.ASCII|${ANC_BASE}/PGE11||TRANS_LUT_V3.0-SMOKEHABS.ASCII|TRANS_LUT_V3.0-SMOKEHABS.ASCII|1
209408|AERO_LUT_V3.0-SMOKEHABS.ASCII|${ANC_BASE}/PGE11||AERO_LUT_V3.0-SMOKEHABS.ASCII|AERO_LUT_V3.0-SMOKEHABS.ASCII|1
209409|RES_LUT_V3.0-DUST.hdf|${ANC_BASE}/PGE11||RES_LUT_V3.0-DUST.hdf|RES_LUT_V3.0-DUST.hdf|1
209410|TRANS_LUT_V3.0-DUST.ASCII|${ANC_BASE}/PGE11||TRANS_LUT_V3.0-DUST.ASCII|TRANS_LUT_V3.0-DUST.ASCII|1
209411|AERO_LUT_V3.0-DUST.ASCII|${ANC_BASE}/PGE11||AERO_LUT_V3.0-DUST.ASCII|AERO_LUT_V3.0-DUST.ASCII|1
209412|RES_LUT_V3.0-URBANPOLU.hdf|${ANC_BASE}/PGE11||RES_LUT_V3.0-URBANPOLU.hdf|RES_LUT_V3.0-URBANPOLU.hdf|1
209413|TRANS_LUT_V3.0-URBANPOLU.ASCII|${ANC_BASE}/PGE11||TRANS_LUT_V3.0-URBANPOLU.ASCII|TRANS_LUT_V3.0-URBANPOLU.ASCII|1
209414|AERO_LUT_V3.0-URBANPOLU.ASCII|${ANC_BASE}/PGE11||AERO_LUT_V3.0-URBANPOLU.ASCII|AERO_LUT_V3.0-URBANPOLU.ASCII|1
209415|RES_LUT_V3.0-URBANCLEAN.hdf|${ANC_BASE}/PGE11||RES_LUT_V3.0-URBANCLEAN.hdf|RES_LUT_V3.0-URBANCLEAN.hdf|1
209416|TRANS_LUT_V3.0-URBANCLEAN.ASCII|${ANC_BASE}/PGE11||TRANS_LUT_V3.0-URBANCLEAN.ASCII|TRANS_LUT_V3.0-URBANCLEAN.ASCII|1
209417|AERO_LUT_V3.0-URBANCLEAN.ASCII|${ANC_BASE}/PGE11||AERO_LUT_V3.0-URBANCLEAN.ASCII|AERO_LUT_V3.0-URBANCLEAN.ASCII|1
209554|toms_10yr.anc|${ANC_BASE}/PGE11||toms_10yr.anc|toms_10yr.anc|1
209563|VALID_COORDS|${ANC_BASE}/PGE11||VALID_COORDS|VALID_COORDS|1
209555|global_AOTR_rejection_mask.hdf|${ANC_BASE}/PGE11||global_AOTR_rejection_mask.hdf||1
209570|new_modis_pol_corr4.hdf|${ANC_BASE}/PGE11||new_modis_pol_corr4.hdf|new_modis_pol_corr4.hdf|1
209571|rayleigh_modis_412_iqu2.hdf|${ANC_BASE}/PGE11||rayleigh_modis_412_iqu2.hdf|rayleigh_modis_412_iqu2.hdf|1
# MCF
209001|${mod09_mcf}|${ANC_BASE}/PGE11||||1
209003|${mod09crs_mcf}|${ANC_BASE}/PGE11||||1
209007|${mod09idn_mcf}|${ANC_BASE}/PGE11||||1
209008|${mod09idt_mcf}|${ANC_BASE}/PGE11||||1
209009|${mod09ids_mcf}|${ANC_BASE}/PGE11||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD09 output file
209000|${mod09_temp}|||||1
209002|MOD09CRS.hdf|${temp_dir}||||1
209010|MOD09IDN.hdf|${temp_dir}||||1
209011|MOD09IDT.hdf|${temp_dir}||||1
209012|MOD09IDS.hdf|${temp_dir}||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
200200|ECS|200100:1
200201|ECS|200100:2
200202|ECS|200100:3
200203|ECS|200100:4
200204|ECS|200100:5
200205|ECS|200100:6
200206|ECS|200100:7
200207|ECS|200100:8
200208|ECS|200100:9
200209|ECS|200100:10
200210|ECS|200100:11
200211|ECS|200100:12
200212|ECS|200100:13
200213|ECS|200100:14
200214|ECS|200100:15
200215|ECS|200100:16
200216|ECS|200100:17
200217|ECS|200100:18
200218|ECS|200100:19
200219|ECS|200100:20
200220|ECS|200100:21
200221|ECS|200100:22
200222|ECS|200100:23
200223|ECS|200100:24
200224|ECS|200100:25
200225|ECS|200100:26
200226|ECS|200100:27
200227|ECS|200100:28
200228|ECS|200100:29
200229|ECS|200100:30
200230|ECS|200100:31
200231|ECS|200100:32
200232|ECS|200100:33
200233|ECS|200100:34
200234|ECS|200100:35
200235|ECS|200100:36
200236|ECS|200100:37
200237|ECS|200100:38
200238|ECS|200100:39
200239|ECS|200100:40
200240|ECS|200100:41
200241|ECS|200100:42
200242|ECS|200100:43
200243|ECS|200100:44
200244|ECS|200100:45
200245|ECS|200100:46
200246|ECS|200100:47
200247|ECS|200100:48
# MODIS Common Runtime Parameters
800500|PGE11 Version|5.3.29
800503|REPROCESSINGPLANNED metadata field|further update is anticipated
800504|REPROCESSINGACTUAL metadata field|reprocessed
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|LINUX ICT cluster
# MOD09 parameters
10258|Collection Start Time (UTC) |${starttime}
10259|Collection Stop Time  (UTC) |${stoptime}
200098|QALUNS|209000
209600|adja_on; 1=enable 0=disable|0
209601|brdf_mode; 0=none 1=Montana 2=Boston|0
209602|lam_cor; 0=disable 1=enable|1
209702|product version number|2
209704|product version number|2
209900|process 250m data band 1; 1=yes, 0 = no|1
209901|process 250m data band 2; 1=yes, 0 = no|1
209902|process 500m data band 1; 1=yes, 0 = no|0
209903|process 500m data band 2; 1=yes, 0 = no|0
209904|process 500m data band 3; 1=yes, 0 = no|1
209905|process 500m data band 4; 1=yes, 0 = no|1
209906|process 500m data band 5; 1=yes, 0 = no|1
209907|process 500m data band 6; 1=yes, 0 = no|1
209908|process 500m data band 7; 1=yes, 0 = no|1
209909|process 1km data band 1; 1=yes, 0 = no|1
209910|process 1km data band 2; 1=yes, 0 = no|1
209911|process 1km data band 3; 1=yes, 0 = no|1
209912|process 1km data band 4; 1=yes, 0 = no|1
209913|process 1km data band 5; 1=yes, 0 = no|1
209914|process 1km data band 6; 1=yes, 0 = no|1
209915|process 1km data band 7; 1=yes, 0 = no|1
209916|produce coarse resolution product; 1=yes, 0=no|1
209917|produce fire product; 1=yes, 0=no|0
209918|process sea pixels; 1=yes, 0=no|1
209919|produce coarse resolution l1b by average; 1=yes, 0=no|1
209920|produce coarse resolution l1b by subsample; 1=yes, 0=no|1
209930|scans to process; -1 = process all scans|-1
209931|make cloud shadows 1=yes 0=no|1
209933|use MODIS AOT 0=no 1=yes|1
209934|mid-IR fire coefficient|4.000
209935|mid-IR fire power|0.1000
209936|mid-IR fire threshold|0.10000
209937|mid-IR fire threshold in glint|0.1500
209938|thermal anomaly threshold|-5.0
209939|thermal anomaly threshold in glint|10.0
209940|glint threshold|0.05000
209943|make CMG files 0=no 1=yes|0
209944|mid-IR fire correction coefficient|0.2500
209945|mid-IR fire correction power|2.0000
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

if [ -f $mod02hkm ] &amp;&amp; [ -f $mod02qkm ] ; then
	# Run PGE
	export PGS_PC_INFO_FILE="$pcf_full"
	ulimit -s 65536
	if [[ "$gdas" == *gdas* ]] ; then
    	$PGE_SUITE_BASE/bin/MOD_PR09.exe
	else
    	$PGE_SUITE_BASE/bin/MOD_PR09DB.exe
	fi

	# Rename files &amp; make outputs
	mod09=`rename_output "$mod09_temp" "$output_dir"`
	if ! [ -z "$mod09" ] ; then
    	mod09_metadata="$mod09.met"
	else
    	echo "Can't find MOD09" &gt;&amp;2
	    rm -rf $temp_dir
    	exit 1
	fi
else
	echo "MOD02HKM not found, assuming night granule &amp; skipping" &gt;&amp;2
fi
rm -rf $temp_dir
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod1kmds</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modhkmds</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod35</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod02qkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>starttime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stoptime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="modhkmds" depth="0" /><port name="mod1kmds" depth="0" /><port name="mod35" depth="0" /><port name="output_dir" depth="0" /><port name="mod03" depth="0" /><port name="log_dir" depth="0" /><port name="starttime" depth="0" /><port name="stoptime" depth="0" /><port name="mod02qkm" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD07</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod35</name><depth>0</depth></port><port><name>mod03</name><depth>0</depth></port><port><name>mod021km</name><depth>0</depth></port><port><name>mod1kmds</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>starttime</name><depth>0</depth></port><port><name>stoptime</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod07</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="starttime" to="starttime" /><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mod1kmds" to="mod1kmds" /><map from="stoptime" to="stoptime" /><map from="mod03" to="mod03" /><map from="mod35" to="mod35" /><map from="mod021km" to="mod021km" /></inputMap><outputMap><map from="mod07" to="mod07" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>#!/bin/bash

source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

mod021km_base=`basename $mod021km`
run_id="mod07.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
		[ ! -f $f ] &amp;&amp; continue
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

date_full=`date --date="$starttime" +%F`
hour=`date --date="$starttime" +%k`

gdas=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh gfs $starttime`
eng=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh eng $starttime`
nise=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh nise $starttime`

senzen_file=MODIS_senzen.bin.swapped
if [ "$sat_id" == "AM1M" ] ; then
    reg_coeff=MODIS_REGCOEF_col5.2.terra.swapped
    detector_file=terra_det.dat.v2
    bias_file=terra_bias.dat.v2
    destripe_file=destripe_config_terra.dat.v1
    mod07_l2_mcf=MOD07_L2.mcf
    mod07_qc_mcf=MOD07_QC.mcf
elif [ "$sat_id" == "PM1M" ] ; then
    reg_coeff=MODIS_REGCOEF_FACTORS.aqua.v3.swapped
    detector_file=aqua_det.dat.v2
    bias_file=aqua_bias.dat.v2
    destripe_file=destripe_config_aqua.dat.v2
    mod07_l2_mcf=MYD07_L2.mcf
    mod07_qc_mcf=MYD07_QC.mcf
else
    echo "Unknown satellite" &gt;&amp;2
    exit 1
fi

mod07_temp=MOD07_L2.${run_id}.hdf
mod07qc_temp=MOD07_QC.${run_id}.txt

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 422500 "${mod35}")
$(print_files_lun 600000 "${mod03}")
$(print_files_lun 700002 "${mod021km}")
$(print_files_lun 430000 "${mod1kmds}")
#
# ancillary
# NCEP 1 degree GDAS Final Run
$(print_files_lun 900000 "${gdas}")
# NCEP 0.5 degree ice concentration
$(print_files_lun 900040 "${eng}")
# NSIDC NISE snow/ice extent
$(print_files_lun 900100 "${nise}")
#
# Static inputs (but rarely updated)
#
# Regression coefficient file
420011|${reg_coeff}|${ANC_BASE}/PGE03||${reg_coeff}|${reg_coeff}|1
# View angle file
420012|${senzen_file}|${ANC_BASE}/PGE03||${senzen_file}|${senzen_file}|1
# Bias file
420017|${bias_file}|${ANC_BASE}/PGE03||${bias_file}|${bias_file}|1
# Detector file
420018|${detector_file}|${ANC_BASE}/PGE03||${detector_file}|${detector_file}|1
# L1B destriper configuration file
430100|${destripe_file}|${ANC_BASE}/PGE03||${destripe_file}|${destripe_file}|1
# MCF
420001|${mod07_l2_mcf}|${ANC_BASE}/PGE03||||1
420003|${mod07_qc_mcf}|${ANC_BASE}/PGE03||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD07 output files
420000|${mod07_temp}|||||1
420002|${mod07qc_temp}|${log_dir}||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
# Static params
10258|Collection Start Time (UTC) |${starttime}
10259|Collection Stop Time  (UTC) |${stoptime}
420004|RP Reference to MOD_PR07.qc|420002:1
421000|MOD07_Num_InvMet_RP_Pairs|4
421001|Inventory_RP_Name_1 |REPROCESSINGACTUAL
421002|Inventory_RP_Value_1|processed once
421003|Inventory_RP_Name_2 |REPROCESSINGPLANNED
421004|Inventory_RP_Value_2|further update is anticipated
421005|Inventory_RP_Name_3 |LOCALVERSIONID
421006|Inventory_RP_Value_3|005
421007|Inventory_RP_Name_4 |PGEVERSION
421008|Inventory_RP_Value_4|5.3.1
421100|MOD07_Num_ArchMet_RP_Pairs|10
421101|Archive RP_Name_1 |ALGORITHMPACKAGEACCEPTANCEDATE
421102|Archive_RP_Value_1|June 1997
421103|Archive RP_Name_2 |ALGORITHMPACKAGEMATURITYCODE
421104|Archive_RP_Value_2|at-launch
421105|Archive RP_Name_3 |ALGORITHMPACKAGENAME
421106|Archive_RP_Value_3|ATBD-MOD-07
421107|Archive RP_Name_4 |ALGORITHMPACKAGEVERSION
421108|Archive_RP_Value_4|2
421109|Archive RP_Name_5 |INSTRUMENTNAME
421110|Archive_RP_Value_5|Moderate Resolution Imaging Spectroradiometer
421111|Archive RP_Name_6 |Profiles_Algorithm_Version_Number
421112|Archive_RP_Value_6|1
421113|Archive RP_Name_7 |Total_Ozone_Algorithm_Version_Number
421114|Archive_RP_Value_7|1
421115|Archive RP_Name_8 |Stability_Indices_Algorithm_Version_Number
421116|Archive_RP_Value_8|1
421117|Archive RP_Name_9 |PROCESSINGENVIRONMENT
421118|Archive_RP_Value_9|ICT cluster
421119|Archive RP_Name_10|PRODUCTIONHISTORY
421120|Archive_RP_Value_10|PGE03:5.3.1
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.3.1
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
export LD_LIBRARY_PATH="$PGE_SUITE_BASE/opt/gcc-4.7.2/lib64:$PGE_SUITE_BASE/opt/gcc-4.7.2/lib:$LD_LIBRARY_PATH"
if [ "$sat_id" == "AM1M" ] ; then
    $PGE_SUITE_BASE/bin/MOD_PR07.exe
elif [ "$sat_id" == "PM1M" ] ; then
    $PGE_SUITE_BASE/bin/MYD_PR07.exe
else
    echo "Unknown satellite" &gt;&amp;2
    exit 1
fi


# Rename files &amp; make outputs
mod07=`rename_output "$mod07_temp" "$output_dir"`
if ! [ -z "$mod07" ] ; then
    mod07_metadata="$mod07.met"
else
    echo "Can't find MOD07" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

rm -rf $temp_dir</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod1kmds</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod35</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod021km</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>starttime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stoptime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod07</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod07_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="stoptime" depth="0" /><port name="starttime" depth="0" /><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="mod03" depth="0" /><port name="mod021km" depth="0" /><port name="mod1kmds" depth="0" /><port name="mod35" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD10</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod35</name><depth>0</depth></port><port><name>mod03</name><depth>0</depth></port><port><name>mod02hkm</name><depth>0</depth></port><port><name>mod021km</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mod03" to="mod03" /><map from="mod35" to="mod35" /><map from="mod02hkm" to="mod02hkm" /><map from="mod021km" to="mod021km" /></inputMap><outputMap /><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mod10.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        [ -f $f ] || continue
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

if [ "$sat_id" == "AM1M" ] ; then
    mod10_l2_mcf=MOD10_L2.mcf
    mod10l2c_mcf=MOD10L2C.mcf
elif [ "$sat_id" == "PM1M" ] ; then
    mod10_l2_mcf=MYD10_L2.mcf
    mod10l2c_mcf=MYD10L2C.mcf
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

mod10_l2_temp=MOD10_L2.${run_id}.hdf

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 600000 "${mod03}")
$(print_files_lun 700001 "${mod02hkm}")
$(print_files_lun 700002 "${mod021km}")
$(print_files_lun 422500 "${mod35}")
#
# Static inputs (but rarely updated)
#
# MCF
210250|${mod10_l2_mcf}|${ANC_BASE}/PGE07||||1
210253|${mod10l2c_mcf}|${ANC_BASE}/PGE07||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD07 output files
210100|${mod10_l2_temp}|||||1
210105|MOD10L2C.hdf|${temp_dir}||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
200098|QALOG LUNS|210100
200200|ECS METADATA|200100:1
210260|AlgorithmPackageAcceptanceDate|05-2005
210261|AlgorithmPackageMaturityCode|Normal
210262|AlgorithmPackageVersion|5
800503|ReprocessingPlanned|further update is anticipated
800504|ReprocessingActual|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
# MODIS Common Runtime Parameters
800500|PGEVersion           |5.0.10
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

if [ -f $mod02hkm ] ; then
	# Run PGE
	export PGS_PC_INFO_FILE="$pcf_full"
	ulimit -s 65536
	if [ "$sat_id" == "AM1M" ] ; then
    	$PGE_SUITE_BASE/bin/MOD_PR10.exe
	elif [ "$sat_id" == "PM1M" ] ; then
    	$PGE_SUITE_BASE/bin/MYD_PR10.exe
	else
    	echo "Unknown satellite" &gt;&amp;2
	    rm -rf $temp_dir
    	exit 1
	fi

	# Rename files &amp; make outputs
	mod10=`rename_output "$mod10_l2_temp" "$output_dir"`
	if ! [ -z "$mod10" ] ; then
    	mod10_metadata="$mod10.met"
	else
    	echo "Can't find MOD10" &gt;&amp;2
	    rm -rf $temp_dir
    	exit 1
	fi
else
	echo "MOD02HKM not found, assuming night granule &amp; skipping" &gt;&amp;2
fi
rm -rf $temp_dir</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod02hkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod35</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod021km</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod10</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod10_metadata</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="mod021km" depth="0" /><port name="mod02hkm" depth="0" /><port name="mod35" depth="0" /><port name="mod03" depth="0" /><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD04_05</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod07</name><depth>0</depth></port><port><name>mod35</name><depth>0</depth></port><port><name>mod03</name><depth>0</depth></port><port><name>mod02qkm</name><depth>0</depth></port><port><name>mod02hkm</name><depth>0</depth></port><port><name>mod021km</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>starttime</name><depth>0</depth></port><port><name>stoptime</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="mod02qkm" to="mod02qkm" /><map from="output_dir" to="output_dir" /><map from="starttime" to="starttime" /><map from="sat_id" to="sat_id" /><map from="mod07" to="mod07" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="stoptime" to="stoptime" /><map from="mod03" to="mod03" /><map from="mod02hkm" to="mod02hkm" /><map from="mod35" to="mod35" /><map from="mod021km" to="mod021km" /></inputMap><outputMap /><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mod04.`hostname`.`date +%s`.$$"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        [ -f $f ] || continue
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
		rm -f ${ft}
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

gdas=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh gfs $starttime | head -1`
toast=`$PGE_SUITE_BASE/scripts/get-ancillary-v2.sh toast $starttime`

if [ "$sat_id" == "AM1M" ] ; then
    mod04_l2_mcf=MOD04_L2.mcf
    mod04_qc_mcf=MOD04_QC.mcf
    mod05_l2_mcf=MOD05_L2.mcf
    mod05_qc_mcf=MOD05_QC.mcf
    mod5c_qc_mcf=MOD5C_QC.mcf
elif [ "$sat_id" == "PM1M" ] ; then
    mod04_l2_mcf=MYD04_L2.mcf
    mod04_qc_mcf=MYD04_QC.mcf
    mod05_l2_mcf=MYD05_L2.mcf
    mod05_qc_mcf=MYD05_QC.mcf
    mod5c_qc_mcf=MYD5C_QC.mcf
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

mod04_l2_temp="MOD04.${run_id}.hdf"
mod04_qc_temp="MOD04.${run_id}.hdf"
mod05_l2_temp="MOD05.${run_id}.hdf"
mod05_qc_temp="MOD05.${run_id}.hdf"
mod5c_qc_temp="MOD5c.${run_id}.hdf"


pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 420000 "${mod07}")
$(print_files_lun 422500 "${mod35}")
$(print_files_lun 600000 "${mod03}")
$(print_files_lun 700000 "${mod02qkm}")
$(print_files_lun 700001 "${mod02hkm}")
$(print_files_lun 700002 "${mod021km}")
#
# ancillary
$(print_files_lun 900000 "${gdas}")
$(print_files_lun 900020 "${toast}")
#
# Static inputs (but rarely updated)
#
#  Specifically for use by MOD06 cirrus detection
400002|TRANSM_H2O_1P38_MICRON.v1|${ANC_BASE}/PGE04||TRANSM_H2O_1P38_MICRON.v1||1
#
# LUN 405100 and 405110 are aerosol lookup tables for land algorithm
405100|lookup_land_w0466.v1|${ANC_BASE}/PGE04||lookup_land_w0466.v1||1
405110|lookup_land_w0553.v1|${ANC_BASE}/PGE04||lookup_land_w0553.v1||1
405120|lookup_land_w0644.v1|${ANC_BASE}/PGE04||lookup_land_w0644.v1||1
405130|lookup_land_w2119.v1|${ANC_BASE}/PGE04||lookup_land_w2119.v1||1
405140|aerosol_land_map.v2|${ANC_BASE}/PGE04||aerosol_land_map.v2||1
#
#  Specifically for MOD04 aerosol over land and ocean
# LUN 407520-407540 are ASCII small mode aerosol tables for ocean algorithm
407530|small_v1c1.dat.v2|${ANC_BASE}/PGE04||small_v1c1.dat.v2||1
407520|small_v2c1.dat.v3|${ANC_BASE}/PGE04||small_v2c1.dat.v3||1
407540|small_v3c1.dat.v3|${ANC_BASE}/PGE04||small_v3c1.dat.v3||1
#
# LUN 407580-407600 are ASCII large mode aerosol tables for ocean algorithm
407590|big_v1c1.dat.v2|${ANC_BASE}/PGE04||big_v1c1.dat.v2||1
407580|big_v2c1.dat.v5|${ANC_BASE}/PGE04||big_v2c1.dat.v5||1
407600|big_v3c1.dat.v2|${ANC_BASE}/PGE04||big_v3c1.dat.v2||1
#
# LUN 407640 refers to ASCII input file for ocean algorithm
407640|mod04ocean.in.v1|${ANC_BASE}/PGE04||mod04ocean.in.v1||1
#
#  Specifically for use by MOD05 (total precipitable water) product
# LUN 410101 - 410151 are ASCII water vapor transmittance tables for 6 different model atmospheres
410101|TRANSM_H2O.MDL_1_H2k.v1|${ANC_BASE}/PGE04||TRANSM_H2O.MDL_1_H2k.v1||1
410111|TRANSM_H2O.MDL_2_H2k.v1|${ANC_BASE}/PGE04||TRANSM_H2O.MDL_2_H2k.v1||1
410121|TRANSM_H2O.MDL_3_H2k.v1|${ANC_BASE}/PGE04||TRANSM_H2O.MDL_3_H2k.v1||1
410131|TRANSM_H2O.MDL_4_H2k.v1|${ANC_BASE}/PGE04||TRANSM_H2O.MDL_4_H2k.v1||1
410141|TRANSM_H2O.MDL_5_H2k.v1|${ANC_BASE}/PGE04||TRANSM_H2O.MDL_5_H2k.v1||1
410151|TRANSM_H2O.MDL_6_H2k.v1|${ANC_BASE}/PGE04||TRANSM_H2O.MDL_6_H2k.v1||1
#
# LUN 410161 refers to ASCII weighting factor table
410161|WEIGHT_TABLE.v1|${ANC_BASE}/PGE04||WEIGHT_TABLE.v1||1
#
#  Specifically for use by MOD05 total precipitable water correction
# LUN 410171 refers to ASCII 0.86 micron reflectance table
410171|Refl_Ch2_Ascii.v1|${ANC_BASE}/PGE04||Refl_Ch2_Ascii.v1||1
#
# LUN 410181 refers to ASCII 0.94/0.86 reflectance ratio table
410181|Ratio_Ch19_To_Ch2_Ascii.v1|${ANC_BASE}/PGE04||Ratio_Ch19_To_Ch2_Ascii.v1||1
#
# MCF
405500|${mod04_l2_mcf}|${ANC_BASE}/PGE04||||1
405501|${mod04_qc_mcf}|${ANC_BASE}/PGE04||||1
410500|${mod05_l2_mcf}|${ANC_BASE}/PGE04||||1
410501|${mod05_qc_mcf}|${ANC_BASE}/PGE04||||1
410502|${mod5c_qc_mcf}|${ANC_BASE}/PGE04||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
405000|${mod04_l2_temp}|||||1
405001|${mod04_qc_temp}|${temp_dir}||||1
410000|${mod05_l2_temp}|||||1
410001|${mod05_qc_temp}|${temp_dir}||||1
410002|${mod5c_qc_temp}|${temp_dir}||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
10258|Collection Start Time (UTC) |${starttime}
10259|Collection Stop Time  (UTC) |${stoptime}
#
# MOD04 metadata references to non-HDF QC file (i.e., diagnostic files)
405601|mod04.qc|405001:1
#
# MOD04 (aerosol) inventory metadata
407050|MOD04_Num_InvMet_RP_Pairs|4
407051|Inventory_RP_Name_1 |REPROCESSINGACTUAL
407052|Inventory_RP_Value_1|processed once
407053|Inventory_RP_Name_2 |REPROCESSINGPLANNED
407054|Inventory_RP_Value_2|further update is anticipated
407055|Inventory_RP_Name_3 |LOCALVERSIONID
407056|Inventory_RP_Value_3|005
407057|Inventory_RP_Name_4 |PGEVERSION
407058|Inventory_RP_Value_4|51.0.11
#
# MOD04 (aerosol) archive metadata
407250|MOD04_Number_Of_Archive_RP|9
407251|Archive RP_Name_1 |ALGORITHMPACKAGEACCEPTANCEDATE
407252|Archive_RP_Value_1|June 1997
407253|Archive RP_Name_2 |ALGORITHMPACKAGEMATURITYCODE
407254|Archive_RP_Value_2|at-launch
407255|Archive RP_Name_3 |ALGORITHMPACKAGENAME
407256|Archive_RP_Value_3|ATBD-MOD-02
407257|Archive RP_Name_4 |ALGORITHMPACKAGEVERSION
407258|Archive_RP_Value_4|2
407259|Archive RP_Name_5 |INSTRUMENTNAME
407260|Archive_RP_Value_5|Moderate Resolution Imaging Spectroradiometer
407261|Archive RP_Name_6 |ALGORITHMSOFTWAREVERSIONLand
407262|Archive_RP_Value_6|2
407263|Archive RP_Name_7 |ALGORITHMSOFTWAREVERSIONOcean
407264|Archive_RP_Value_7|2
407265|Archive RP_Name_8 |PROCESSINGENVIRONMENT
407266|Archive_RP_Value_8|LINUX ICT Cluster
407267|Archive RP_Name_9 |PRODUCTIONHISTORY
407268|Archive_RP_Value_9|PGE04:51.0.11
#
# MOD05 metadata references to non-HDF QC file (i.e., diagnostic files)
410601|mod05.qc|410001:1
410602|mod05_CORR.qc|410002:1
#
# MOD05 (total precipitable water) inventory metadata
412050|MOD05_Num_InvMet_RP_Pairs|4
412051|Inventory_RP_Name_1 |REPROCESSINGACTUAL
412052|Inventory_RP_Value_1|processed once
412053|Inventory_RP_Name_2 |REPROCESSINGPLANNED
412054|Inventory_RP_Value_2|further update is anticipated
412055|Inventory_RP_Name_3 |LOCALVERSIONID
412056|Inventory_RP_Value_3|005
412057|Inventory_RP_Name_4 |PGEVERSION
412058|Inventory_RP_Value_4|51.0.11
#
# MOD05 (total precipitable water) archive metadata
412250|MOD05_Number_Of_Archive_RP|9
412251|Archive RP_Name_1 |ALGORITHMPACKAGEACCEPTANCEDATE
412252|Archive_RP_Value_1|June 1997
412253|Archive RP_Name_2 |ALGORITHMPACKAGEMATURITYCODE
412254|Archive_RP_Value_2|at-launch
412255|Archive RP_Name_3 |ALGORITHMPACKAGENAME
412256|Archive_RP_Value_3|ATBD-MOD-03
412257|Archive RP_Name_4 |ALGORITHMPACKAGEVERSION
412258|Archive_RP_Value_4|2
412259|Archive RP_Name_5 |INSTRUMENTNAME
412260|Archive_RP_Value_5|Moderate Resolution Imaging Spectroradiometer
412261|Archive RP_Name_6 |ALGORITHMSOFTWAREVERSION_NIR
412262|Archive_RP_Value_6|2
412263|Archive RP_Name_7 |ALGORITHMSOFTWAREVERSION_IR
412264|Archive_RP_Value_7|2
412265|Archive RP_Name_8 |PROCESSINGENVIRONMENT
412266|Archive_RP_Value_8|LINUX ICT Cluster
412267|Archive RP_Name_9 |PRODUCTIONHISTORY
412268|Archive_RP_Value_9|PGE04:51.0.11
# MODIS Common Runtime Parameters
800500|PGE11 Version|5.3.29
800503|REPROCESSINGPLANNED metadata field|further update is anticipated
800504|REPROCESSINGACTUAL metadata field|processed once
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|LINUX ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PR04CR.exe
$PGE_SUITE_BASE/bin/MOD_PR04_05.exe

# Rename files &amp; make outputs
mod04=`rename_output "$mod04_l2_temp" "$output_dir"`
mod05=`rename_output "$mod05_l2_temp" "$output_dir"`
[ -z "$mod04" ] || mod04_metadata="$mod04.met"
[ -z "$mod05" ] || mod05_metadata="$mod05.met"

rm -rf $temp_dir
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod07</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod35</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod021km</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod02hkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod02qkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>starttime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stoptime</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod04</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod05</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod04_metadata</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod05_metadata</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="mod03" depth="0" /><port name="mod02hkm" depth="0" /><port name="mod02qkm" depth="0" /><port name="mod35" depth="0" /><port name="mod07" depth="0" /><port name="mod021km" depth="0" /><port name="starttime" depth="0" /><port name="stoptime" depth="0" /><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD09G</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>modmggad</name><depth>0</depth></port><port><name>mod09gqk</name><depth>0</depth></port><port><name>mod09ghk</name><depth>0</depth></port><port><name>mod09gst</name><depth>0</depth></port><port><name>modpt1kd</name><depth>0</depth></port><port><name>modpthkm</name><depth>0</depth></port><port><name>modptqkm</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="mod09gst" to="mod09gst" /><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="modpt1kd" to="modpt1kd" /><map from="mod09gqk" to="mod09gqk" /><map from="log_dir" to="log_dir" /><map from="mod09ghk" to="mod09ghk" /><map from="modptqkm" to="modptqkm" /><map from="config" to="config" /><map from="modpthkm" to="modpthkm" /><map from="modmggad" to="modmggad" /></inputMap><outputMap /><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mod09g.`hostname`.`date +%s`.$$"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

if [ "$sat_id" == "AM1M" ] ; then
    mod09ga_mcf=MOD09GA.mcf
    mod09gq_mcf=MOD09GQ.mcf
elif [ "$sat_id" == "PM1M" ] ; then
    mod09ga_mcf=MYD09GA.mcf
    mod09gq_mcf=MYD09GQ.mcf
else
    echo "Unknown satellite" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

mod09ga_temp="MOD09GA.${run_id}.hdf"
mod09gq_temp="MOD09GQ.${run_id}.hdf"

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# HDF files
$(print_files_lun 298000 "${modmggad}")
$(print_files_lun 298002 "${mod09gqk}")
$(print_files_lun 298003 "${mod09ghk}")
$(print_files_lun 298004 "${mod09gst}")
$(print_files_lun 299010 "${modpt1kd}")
$(print_files_lun 299011 "${modpthkm}")
$(print_files_lun 299012 "${modptqkm}")
#
# Static inputs (but rarely updated)
#
# MCF
213705|${mod09ga_mcf}|${ANC_BASE}/PGE13||||1
213706|${mod09gq_mcf}|${ANC_BASE}/PGE13||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
213700|${mod09ga_temp}|||||1
213701|${mod09gq_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
# MODIS Common Runtime Parameters
800500|PGE13 Version|5.0.27
800503|REPROCESSINGPLANNED metadata field|further update is anticipated
800504|REPROCESSINGACTUAL metadata field|reprocessed
800510|SatelliteInstrument  |${sat_id}
800550|ProcessingEnvironment|LINUX ICT cluster
# MOD09G parameters
203112|DO_COMPRESSION     |Yes
213710|L2GLiteFormat      |compact
209953|ParameterName value|MOD09G
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|1
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
export LD_LIBRARY_PATH="$PGE_SUITE_BASE/opt/gcc-4.7.2/lib64:$PGE_SUITE_BASE/opt/gcc-4.7.2/lib:$LD_LIBRARY_PATH"
$PGE_SUITE_BASE/bin/MOD_PR09G.exe

# Rename files &amp; make outputs
mod09ga=`rename_output "$mod09ga_temp" "$output_dir"`
if ! [ -z "$mod09ga" ] ; then
    mod09ga_metadata="$mod09ga.met"
else
    echo "Can't find MOD09GA" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

# Rename files &amp; make outputs
mod09gq=`rename_output "$mod09gq_temp" "$output_dir"`
if ! [ -z "$mod09gq" ] ; then
    mod09gq_metadata="$mod09gq.met"
else
    echo "Can't find MOD09GQ" &gt;&amp;2
    rm -rf $temp_dir
    exit 1
fi

rm -rf $temp_dir</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09ghk</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09gqk</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09gst</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modmggad</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modpt1kd</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modpthkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modptqkm</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09ga</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod09gq</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="modpthkm" depth="0" /><port name="modmggad" depth="0" /><port name="mod09gqk" depth="0" /><port name="mod09gst" depth="0" /><port name="mod09ghk" depth="0" /><port name="modpt1kd" depth="0" /><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="modptqkm" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD13</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>h</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>startdate</name><depth>0</depth></port><port><name>stopdate</name><depth>0</depth></port><port><name>phased</name><depth>0</depth></port><port><name>v</name><depth>0</depth></port><port><name>modmggad</name><depth>2</depth></port><port><name>mod09ghk</name><depth>2</depth></port><port><name>mod09gqk</name><depth>2</depth></port><port><name>mod09gst</name><depth>2</depth></port><port><name>modpthkm</name><depth>2</depth></port><port><name>modptqkm</name><depth>2</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>out_root</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mod13q1</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="out_root" to="out_root" /><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="mod09ghk" to="mod09ghk" /><map from="phased" to="phased" /><map from="modmggad" to="modmggad" /><map from="h" to="h" /><map from="mod09gst" to="mod09gst" /><map from="v" to="v" /><map from="startdate" to="startdate" /><map from="mod09gqk" to="mod09gqk" /><map from="stopdate" to="stopdate" /><map from="modptqkm" to="modptqkm" /><map from="config" to="config" /><map from="modpthkm" to="modpthkm" /></inputMap><outputMap><map from="mod13q1" to="mod13q1" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mod13.$stopdate.$h$v.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 files="$2" pos=1
    for f in $files ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

collect_16days() {
    local WORK_ROOT="$1" h="$2" v="$3" enddate="$4" filemask="$5"

    for d in `seq 0 15` ; do
        prev_day=`date --date="$enddate - $d days" +%Y/%j`
        prev_day_dir="$WORK_ROOT/${prev_day}/h${h}v${v}"
        [ -d "$prev_day_dir" ] &amp;&amp; find "$prev_day_dir" -name "$filemask"
    done

}

starttime=`date --date="$startdate" +%FT00:00:00.000000Z`
stoptime=`date --date="$stopdate" +%FT00:00:00.000000Z`

unset mod09gqk
unset mod09ghk
unset mod09gst
unset modptqkm
unset modpthkm
unset modmggad

mod09gqk=`collect_16days "$out_root" $h $v $stopdate "M?D09GQK.*.hdf"`
mod09ghk=`collect_16days "$out_root" $h $v $stopdate "M?D09GHK.*.hdf"`
mod09gst=`collect_16days "$out_root" $h $v $stopdate "M?D09GST.*.hdf"`
modptqkm=`collect_16days "$out_root" $h $v $stopdate "M?DPTQKM.*.hdf"`
modpthkm=`collect_16days "$out_root" $h $v $stopdate "M?DPTHKM.*.hdf"`
modmggad=`collect_16days "$out_root" $h $v $stopdate "M?DMGGAD.*.hdf"`

if [ "$sat_id" == "AM1M" ] ; then
	mod13a1_mcf="MOD13A1.mcf"
	mod13q1_mcf="MOD13Q1.mcf"
elif [ "$sat_id" == "PM1M" ] ; then
	mod13a1_mcf="MYD13A1.mcf"
	mod13q1_mcf="MYD13Q1.mcf"
else
	echo "Unknown satellite" &gt;&amp;2
	exit 1
fi

mod13q1_temp="MOD13Q1.${run_id}.hdf"

pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# input hdf files
$(print_files_lun 298000 "${modmggad[@]}")
$(print_files_lun 298002 "${mod09gqk[@]}")
$(print_files_lun 298003 "${mod09ghk[@]}")
$(print_files_lun 298004 "${mod09gst[@]}")
$(print_files_lun 299011 "${modpthkm[@]}")
$(print_files_lun 299012 "${modptqkm[@]}")
#
# Static inputs (but rarely updated)
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
213250|${mod13a1_mcf}|${ANC_BASE}/PGE25||||1
213251|${mod13q1_mcf}|${ANC_BASE}/PGE25||||1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# output files
213100|${mod13q1_temp}|||||1
# 213110|${modss_temp}|||||1
# 200100|${modlm_qa_temp}|||||1
# 200109|${browse_temp}|||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
# Static params
10258|Start date time|${starttime%Z}Z
10259|End date time|${stoptime%Z}Z
200098|QALOG LUNS|213100
200200|ECS METADATA|200100:1
213602|LocalGranuleIdVersion|5
213620|BRDFFlag;1=Perform BRDF, 0 = Disable BRDF |0
213621|CVMVCFlag;1=Perform CVMVC, 0 = Disable CVMVC |1
213622|BRDF Data base file name|None
213623|MinBRDFNumberOfObservations|5
213624|MinBRDFNDVI|-0.3
213625|ExtraMaxBRDFNDVI|0.05
213626|MinCVMVCNumberOfObservations|2
213627|MinCVMVCNVI|-0.3
213628|ExtraMaxCVMVCNDVI|0.05
213629|PhasedProductionflag|${phased}
297300|mod_prss_infile_luns|213100
297301|mod_prss_outfile_luns|213110
800500|PGE25 Version|5.2.8
800503|ReprocessingPlanned value|further update is anticipated
800504|ReprocessingActual value|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
800510|SatelliteInstrument|${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|0
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
$PGE_SUITE_BASE/bin/MOD_PR13A1.exe

# Rename files &amp; make outputs
mod13q1=`rename_output "$mod13q1_temp" "$output_dir"`
[ -z "$mod13q1" ] || mod13a1_metadata="$mod13q1.met"
rm -rf "${temp_dir}"</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>h</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>v</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>startdate</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stopdate</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>phased</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09gqk</name>
      <type>STABLE_FILE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09ghk</name>
      <type>STABLE_FILE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09gst</name>
      <type>STABLE_FILE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modptqkm</name>
      <type>STABLE_FILE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modpthkm</name>
      <type>STABLE_FILE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modmggad</name>
      <type>STABLE_FILE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>out_root</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod13q1</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><cross><dot><port name="out_root" depth="0" /><port name="sat_id" depth="0" /><port name="mod09ghk" depth="2" /><port name="mod09gqk" depth="2" /><port name="mod09gst" depth="2" /><port name="modpthkm" depth="2" /><port name="modptqkm" depth="2" /><port name="modmggad" depth="2" /></dot><dot><port name="phased" depth="0" /><port name="startdate" depth="0" /><port name="stopdate" depth="0" /></dot><dot><port name="h" depth="0" /><port name="v" depth="0" /></dot></cross><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /></dot><port name="config" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Find_paths</name><inputPorts><port><name>day</name><depth>0</depth></port><port><name>month</name><depth>0</depth></port><port><name>year</name><depth>0</depth></port><port><name>src_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port></inputPorts><outputPorts><port><name>path</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="log_dir" to="log_dir" /><map from="month" to="month" /><map from="config" to="config" /><map from="year" to="year" /><map from="day" to="day" /><map from="src_dir" to="src_dir" /></inputMap><outputMap><map from="path" to="path" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e 

path=( `find $src_dir -maxdepth 1 -name "clear_*_*_$day-$month-$year*.isp" \
  -printf "%f\n" | xargs -L1 $PGE_SUITE_BASE/scripts/get_path_num.pl \
  | sort | uniq` )</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>day</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>month</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>year</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>src_dir</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>path</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>5</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><cross><port name="config" depth="0" /><port name="src_dir" depth="0" /><dot><port name="month" depth="0" /><port name="day" depth="0" /><port name="year" depth="0" /></dot></cross><port name="log_dir" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>MOD14</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mod03</name><depth>0</depth></port><port><name>mod021km</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sat_id" to="sat_id" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mod03" to="mod03" /><map from="mod021km" to="mod021km" /></inputMap><outputMap /><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

mod021km_base=`basename $mod021km`
run_id="mod14.$mod021km_base.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 pos=1
    shift
    for f in $@ ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

mod14_temp="MOD14.${run_id}.hdf"
mod14crs_temp="MOD14CRS.${run_id}.hdf"


if [ "$sat_id" == "AM1M" ] ; then
	mod14_mcf="MOD14.mcf"
	mod14crs_mcf="MOD14CRS.mcf"
elif [ "$sat_id" == "PM1M" ] ; then
	mod14_mcf="MYD14.mcf"
	mod14crs_mcf="MYD14CRS.mcf"
else
	echo "Unknown satellite" &gt;&amp;2
	exit 1
fi


pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# input hdf files
$(print_files_lun 600000 "${mod03}")
$(print_files_lun 700002 "${mod021km}")
#
#
# Static inputs (but rarely updated)
#
209004|${mod14_mcf}|${ANC_BASE}/PGE30||||1
209005|${mod14crs_mcf}|${ANC_BASE}/PGE30||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD14 output files
214000|${mod14_temp}|||||1
214001|${mod14crs_temp}|${temp_dir}||||1
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
700200|ECS METADATA|700100:1
700201|ECS METADATA|700101:1
700202|ECS METADATA|700102:1
#
# Static params
200098|QALOG LUNS|214000
200200|ECS METADATA|200100:1
209704|product version number|3
209916|produce coarse resolution fire product|1
209932|force internal cloud mask for fire|1
800500|PGE30 Version|5.0.7
800503|ReprocessingPlanned value|further update is anticipated
800504|ReprocessingActual|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom.nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=terra for the product Science Quality status.
800510|SatelliteInstrument|${sat_id}
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|0
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PR14.exe

# Rename files &amp; make outputs
mod14=`rename_output "$mod14_temp" "$output_dir"`
[ -z "$mod14" ] || mod14_metadata="$mod14.met"

rm -rf $temp_dir
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod021km</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod14</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mod14_metadata</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><port name="sat_id" depth="0" /><dot><port name="mod021km" depth="0" /><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /><port name="mod03" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MCD43</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>stopdate</name><depth>0</depth></port><port><name>mod09ghk</name><depth>3</depth></port><port><name>mod09gst</name><depth>3</depth></port><port><name>modmggad</name><depth>3</depth></port><port><name>modpthkm</name><depth>3</depth></port><port><name>h</name><depth>0</depth></port><port><name>v</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>data_roots</name><depth>1</depth></port></inputPorts><outputPorts><port><name>mcd43a4</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="data_roots" to="data_roots" /><map from="mod09gst" to="mod09gst" /><map from="v" to="v" /><map from="output_dir" to="output_dir" /><map from="mod09ghk" to="mod09ghk" /><map from="stopdate" to="stopdate" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="modpthkm" to="modpthkm" /><map from="modmggad" to="modmggad" /><map from="h" to="h" /></inputMap><outputMap><map from="mcd43a4" to="mcd43a4" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>source "$PGSHOME/bin/linux/pgs-env.ksh"
ANC_BASE="$PGE_SUITE_BASE/ancillary"

run_id="mod23.h${h}v${v}.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

get_metadata_val() {
    local f=$1 v=$2
    sed -n -e "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\"\(.*\)\"/\1/p" "$f"
}

print_files_lun() {
    local lun=$1 files="$2" pos=1
    for f in $files ; do 
        local b=`basename $f`
        local d=`dirname $f`
        echo "$lun|${b}|${d}||${b}|${b}|${pos}"
        pos=$(( $pos + 1 ))
    done | tac
  [ "$pos" -eq 1 ] &amp;&amp; echo "#"
}

rename_output() {
    local t="$1" d="$2"
    local ft="${d}/${t}"
    if [ -e "$ft" ] &amp;&amp; [ -e "${ft}.met" ] ; then
        b=`get_metadata_val "$ft.met" LOCALGRANULEID`
        if [ -z "$b" ] ; then
            echo "Can't find LOCALGRANULEID in metadata for $t" &gt;&amp;2
            exit 1
        fi
        f="${d}/${b}"
        mv "$ft" "${f}"
        mv "${ft}.met" "${f}.met"
        echo $f
        exit 0
    else
        echo "Can't find $t" &gt;&amp;2
        exit 1
    fi
}

collect_16days() {
    local h="$1" v="$2" enddate="$3" filemask="$4"
    shift 4
	
	for WORK_ROOT in $@ ; do 
	    for d in `seq 0 15` ; do
    	    prev_day=`date --date="$enddate - $d days" +%Y/%j`
        	prev_day_dir="$WORK_ROOT/${prev_day}/h${h}v${v}"
	        [ -d "$prev_day_dir" ] &amp;&amp; find "$prev_day_dir" -name "$filemask"
    	done
	done
}

enddate=`date --date="$stopdate" +%F`
startdate=`date --date="$enddate - 15 days" +%F`
startdoy=`date --date="$startdate" +%Y%j`

unset modmggad
unset mod09ghk
unset mod09gst
unset modpthkm

modmggad=`collect_16days $h $v $stopdate "M?DMGGAD.*.hdf" "${data_roots[@]}"`
mod09ghk=`collect_16days $h $v $stopdate "M?D09GHK.*.hdf" "${data_roots[@]}"`
mod09gst=`collect_16days $h $v $stopdate "M?D09GST.*.hdf" "${data_roots[@]}"`
modpthkm=`collect_16days $h $v $stopdate "M?DPTHKM.*.hdf" "${data_roots[@]}"`

mcd43a1_temp="MCD43A1.${run_id}.hdf"
mcd43a2_temp="MCD43A2.${run_id}.hdf"
mcd43a3_temp="MCD43A3.${run_id}.hdf"
mcd43a4_temp="MCD43A4.${run_id}.hdf"
mcd43b1_temp="MCD43B1.${run_id}.hdf"
mcd43b2_temp="MCD43B2.${run_id}.hdf"
mcd43b3_temp="MCD43B3.${run_id}.hdf"
mcd43b4_temp="MCD43B4.${run_id}.hdf"


pcf_full="${log_dir}/${run_id}.pcf"
cat &gt; $pcf_full &lt;&lt; EOF
# ~ is replaced with PGSHOME environment variable
?   SYSTEM RUNTIME PARAMETERS
1
1
?   PRODUCT INPUT FILES
!  ~/runtime
#
# Dynamic inputs (new on every run)
#
# Tile params
243120|h${h}v${v}db.hdf|${ANC_BASE}/PGE23||h${h}v${v}db.hdf|h${h}v${v}db.hdf|1
#
# input hdf files
$(print_files_lun 298000 "${modmggad[@]}")
$(print_files_lun 298003 "${mod09ghk[@]}")
$(print_files_lun 298004 "${mod09gst[@]}")
$(print_files_lun 299011 "${modpthkm[@]}")
#
#
# Static inputs (but rarely updated)
#
243010|amb_setup.dat|${ANC_BASE}/PGE23||amb_setup.dat|amb_setup.dat|1
243020|amb_albedos.dat|${ANC_BASE}/PGE23||amb_albedos.dat|amb_albedos.dat|1
243030|amb_brdfdbsetup.dat|${ANC_BASE}/PGE23||amb_brdfdbsetup.dat|amb_brdfdbsetup.dat|1
#
243041|MCD43A1.mcf|${ANC_BASE}/PGE23||||1
243042|MCD43A2.mcf|${ANC_BASE}/PGE23||||1
243043|MCD43A3.mcf|${ANC_BASE}/PGE23||||1
243044|MCD43A4.mcf|${ANC_BASE}/PGE23||||1
243050|MCD43B3.mcf|${ANC_BASE}/PGE23||||1
243060|MCD43B4.mcf|${ANC_BASE}/PGE23||||1
243071|MCD43B1.mcf|${ANC_BASE}/PGE23||||1
243072|MCD43B2.mcf|${ANC_BASE}/PGE23||||1
#
10200|nad27sp|~/database/common/GCT||||1
10201|nad83sp|~/database/common/GCT||||1
10999|PGS_CUC_maths_parameters|~/database/common/CUC||||1
#
10650|dem30ARC_E60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N90.hdf|6
10650|dem30ARC_E60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_E060N0.hdf|5
10650|dem30ARC_W60N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N0.hdf|4
10650|dem30ARC_W60N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W060N90.hdf|3
10650|dem30ARC_W180N90.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N90.hdf|2
10650|dem30ARC_W180N0.hdf|${ANC_BASE}/DEM|||dem30ARC_W180N0.hdf|1
#
# Temporary files (should include unique run id)
10250|MCF.${run_id}|${temp_dir}||||1
10252|GetAttr.${run_id}|${temp_dir}||||1
10254|MCFWrite.${run_id}|${temp_dir}||||1
#
#
?   PRODUCT OUTPUT FILES
! ${output_dir}
#
# MOD23 output files
243045|${mcd43a1_temp}|||||1 
243046|${mcd43a2_temp}|||||1 
243047|${mcd43a3_temp}|||||1 
243048|${mcd43a4_temp}|||||1 
243200|${mcd43b1_temp}|||||1 
243201|${mcd43b2_temp}|||||1 
243220|${mcd43b3_temp}|||||1 
243230|${mcd43b4_temp}|||||1 
10255|asciidump|${temp_dir}||||1
#
#
?   SUPPORT INPUT FILES
!  ~/runtime
10301|leapsec.dat|~/database/common/TD||||1
10302|udunits.dat|~/database/common/CUC||||1
10303|science.xsl|~/database/common/MET||||1
10401|utcpole.dat|~/database/common/CSC||||1
10402|earthfigure.dat|~/database/common/CSC||||1
10601|de200.eos|~/database/linux/CBP||||1
10801|sc_tags.dat|~/database/common/EPH||||1
10900|indexFile|~/database/common/AA||||1
#
#
?   SUPPORT OUTPUT FILES
! ${log_dir}
#
# Temporary files (should include unique run id)
10100|LogStatus.$run_id|||||1
10101|LogReport.$run_id|||||1
10102|LogUser.$run_id|||||1
10103|TmpStatus.$run_id|||||1
10104|TmpReport.$run_id|||||1
10105|TmpUser.$run_id|||||1
10110|MailFile.$run_id|||||1
10111|ShmMem.$run_id|||||1
#
#
?   USER DEFINED RUNTIME PARAMETERS
#
700200|ECS METADATA|700100:1
700201|ECS METADATA|700101:1
700202|ECS METADATA|700102:1
#
# Static params
200098|QALUNS|243200,243201,243220,243230,243045,243046,243047,243048
200200|ECS METADATA|200100:1
200201|ECS METADATA|200100:2
200202|ECS METADATA|200100:3
200203|ECS METADATA|200100:4
200204|ECS METADATA|200100:5
200205|ECS METADATA|200100:6
200206|ECS METADATA|200100:7
200207|ECS METADATA|200100:8
209965|produce coarse resolution by average; 1=YES, 0=NO|0
209970|produce coarse resolution by subsample; 1=YES, 0=NO|0
209975|MOD_PRL3CRS coarse window size|5,10
209980|produce coarse resolution by pixel count; 1=YES, 0=NO|0
210000|STARTDATE|${startdate}
210001|STARTDOY|${startdoy}
210002|ENDDATE|${enddate}
297300|mod_prss_infile_luns|243200,243201,243220,243230,243045,243046,243047,243048
297301|mod_prss_outfile_luns|243202,243203,243221,243231,243145,243146,243147,243148
297302|MOD_PRL3CRS input luns|243200,243201,243220,243230,243045,243046,243047,243048
297303|MOD_PRL3CRS output luns for coarse by average|243260,243261,243240,243250,243051,243052,243053,243054
297304|MOD_PRL3CRS output luns for coarse by subsample|243260,243261,243240,243250,243051,243052,243053,243054
297305|MOD_PRL3CRS output luns for course by pixel count|243260,243261,243240,243250,243051,243052,243053,243054
800500|PGE23 Version|5.0.16
800503|ReprocessingPlanned|further update is anticipated
800504|ReprocessingActual|reprocessed
800506|ScienceQualityFlagExplanation|See http://landweb.nascom/nasa.gov/cgi-bin/QA_WWW/qaFlagPage.cgi?sat=aqua the product Science Quality status.
800510|SatelliteInstrument|AM1M
800550|ProcessingEnvironment|ICT cluster
#
# -----------------------------------------------------------------------
# These parameters are required to support the PGS_SMF_Send...() tools.
# If the first parameter (TransmitFlag) is disabled, then none of the
# other parameters need to be set. By default, this functionality has been
# disabled. To enable, set TransmitFlag to 1 and supply the other 3 
# parameters with local information. (DO NOT REMOVE THESE ENTRIES)
# -----------------------------------------------------------------------
10109|TransmitFlag; 1=transmit,0=disable|0
10106|RemoteHost|sandcrab
10107|RemotePath|/usr/kwan/test/PC/data
10108|EmailAddresses|kwan@eos.hitc.com
#
# -----------------------------------------------------------------------
# The following runtime parameters define various logging options.
# Parameters described as lists should be space (i.e. ' ') separated.
# The logical IDs 10117, 10118, 10119 listed below are for OPTIONAL
# control of SMF logging.  Any of these logical IDs which is unused by a
# PGE may be safely commented out (e.g. if logging is not disabled for
# any status level, then the line beginning 10117 may be commented out).
# -----------------------------------------------------------------------
10114|Logging Control; 0=disable logging, 1=enable logging|1
10115|Trace Control; 0=no trace, 1=error trace, 2=full trace|0
10116|Process ID logging; 0=don't log PID, 1=log PID|0
10117|Disabled status level list (e.g. W S F)|
10118|Disabled seed list|
10119|Disabled status mnemonic code list|
#
#
10220|Toolkit version string|SCF  TK5.2.18
10120|ADEOS-II s/c reference time|
10121|ADEOS-II ground reference time|
10122|ADEOS-II s/c clock period|
10123|TRMM UTCF value|
10124|NASA PB5C time Epoch date (ASCII UTC)|
10507|ephemeris data quality flag mask|65536
10508|attitude data quality flag mask|65536
10911|ECS DEBUG; 0=normal, 1=debug|0
#
# -----------------------------------------------------------------------
# This entry defines the IP address of the processing host and is used
# by the Toolkit when generating unique Intermediate and Temporary file
# names.  The Toolkit no longer relies on the PGS_HOST_PATH environment
# variable to otain this information. (DO NOT REMOVE THIS ENTRY)
# -----------------------------------------------------------------------
10099|Local IP Address of 'ether'|155.157.31.87
#
#
?   INTERMEDIATE INPUT
!  ~/runtime
?   INTERMEDIATE OUTPUT
! ${temp_dir}
?   TEMPORARY I/O
! ${temp_dir}
?   END
EOF

# Run PGE
export PGS_PC_INFO_FILE="$pcf_full"
ulimit -s 65536
$PGE_SUITE_BASE/bin/MOD_PR43B.exe

# Rename files &amp; make outputs
mcd43a1=`rename_output "$mcd43a1_temp" "$output_dir"`
[ -z "$mcd43a1" ] || mcd43a1_metadata="$mcd43a1.met"
mcd43a2=`rename_output "$mcd43a2_temp" "$output_dir"`
[ -z "$mcd43a2" ] || mcd43a2_metadata="$mcd43a2.met"
mcd43a3=`rename_output "$mcd43a3_temp" "$output_dir"`
[ -z "$mcd43a3" ] || mcd43a3_metadata="$mcd43a3.met"
mcd43a4=`rename_output "$mcd43a4_temp" "$output_dir"`
[ -z "$mcd43a4" ] || mcd43a4_metadata="$mcd43a4.met"

mcd43b1=`rename_output "$mcd43b1_temp" "$output_dir"`
[ -z "$mcd43b1" ] || mcd43b1_metadata="$mcd43b1.met"
mcd43b2=`rename_output "$mcd43b2_temp" "$output_dir"`
[ -z "$mcd43b2" ] || mcd43b2_metadata="$mcd43b2.met"
mcd43b3=`rename_output "$mcd43b3_temp" "$output_dir"`
[ -z "$mcd43b3" ] || mcd43b3_metadata="$mcd43b3.met"
mcd43b4=`rename_output "$mcd43b4_temp" "$output_dir"`
[ -z "$mcd43b4" ] || mcd43b4_metadata="$mcd43b4.met"

rm -rf $temp_dir

if [ -z "$mcd43a4" ] ; then
	echo "Can't find MCD43A4" &gt;&amp;2
	exit 1
fi
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>h</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>v</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stopdate</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modmggad</name>
      <type>STABLE_FILE</type>
      <depth>3</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09ghk</name>
      <type>STABLE_FILE</type>
      <depth>3</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod09gst</name>
      <type>STABLE_FILE</type>
      <depth>3</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modpthkm</name>
      <type>STABLE_FILE</type>
      <depth>3</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>data_roots</name>
      <type>SIMPLE</type>
      <depth>1</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43a1</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43a2</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43a3</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43a4</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43b1</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43b2</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43b3</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43b4</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><port name="mod09ghk" depth="3" /><port name="mod09gst" depth="3" /><port name="modmggad" depth="3" /><port name="modpthkm" depth="3" /><port name="data_roots" depth="1" /><dot><cross><port name="stopdate" depth="0" /><dot><port name="h" depth="0" /><port name="v" depth="0" /></dot></cross><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /></dot></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MCD43_tile_pic</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>mcd43a4</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mcd43a4_jpg</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mcd43a4" to="mcd43a4" /></inputMap><outputMap><map from="mcd43a4_jpg" to="mcd43a4_jpg" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>HDFLOOK=$PGE_SUITE_BASE/bin/HDFLook

get_archive_metadata_val() {
    local f=$1 v=$2
    $PGE_SUITE_BASE/bin/ncget $f :ArchiveMetadata.0 | sed -n -e \
    "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\(.*\)/\1/p"
}

cd $log_dir
run_id="mcd43a4-pic.`basename $mcd43a4`.`hostname`.`date +%s`.$$"

lat_max=$(get_archive_metadata_val $mcd43a4 "NORTHBOUNDINGCOORDINATE")
lat_min=$(get_archive_metadata_val $mcd43a4 "SOUTHBOUNDINGCOORDINATE")
lon_max=$(get_archive_metadata_val $mcd43a4 "EASTBOUNDINGCOORDINATE")
lon_min=$(get_archive_metadata_val $mcd43a4 "WESTBOUNDINGCOORDINATE")

mcd43a4_jpg=${output_dir}/`basename $mcd43a4`".jpg"
hdflook_script="${log_dir}/hdflook.${run_id}"

cat &gt; $hdflook_script &lt;&lt; EOF
verbose
clear_data

set_misc_options CloudsRGBEnhance=Yes
set_image_background color=Black
set_misc_options OnlyDay=Yes
set_projection_to_geometry ProjectionTo="LINEAR" \\
   PIXELSIZEXTO=1000 PIXELSIZEYTO=1000 WIDTHTO=5200 HEIGHTTO=3000 \\
   LatitudeMinTo=$lat_min LatitudeMaxTo=$lat_max \\
   LongitudeMinTo=$lon_min LongitudeMaxTo=$lon_max

set_input_hdf_file $mcd43a4
set_image_RGB_composite USERRGB \\
   SDSNameR="Nadir_Reflectance_Band1" SDSNoR=1 IndexR=height,width,1 ComplementR=No minR=200 maxR=2500 \\
   SDSNameG="Nadir_Reflectance_Band4" SDSNoG=4 IndexG=height,width,1 ComplementG=No minG=200 maxG=2500 \\
   SDSNameB="Nadir_Reflectance_Band3" SDSNoB=3 IndexB=height,width,1 ComplementB=No minB=200 maxB=2500 
create_MODIS_JPEG_image FileName="$mcd43a4_jpg"
EOF

$HDFLOOK $hdflook_script

if ! [ -f $mcd43a4_jpg ] ; then mcd43a4_jpg="" ; fi
</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mcd43a4</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mcd43a4_jpg</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><port name="output_dir" depth="0" /><port name="log_dir" depth="0" /><port name="mcd43a4" depth="0" /></dot><port name="config" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>MCD43_mosaic</name><inputPorts><port><name>mcd43a4</name><depth>1</depth></port><port><name>stopdate</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mosaic_jpg</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>mosaic_tif</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="stopdate" to="stopdate" /><map from="log_dir" to="log_dir" /><map from="config" to="config" /><map from="mcd43a4" to="mcd43a4" /></inputMap><outputMap><map from="mosaic_tif" to="mosaic_tif" /><map from="mosaic_jpg" to="mosaic_jpg" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>HDFLOOK=$PGE_SUITE_BASE/bin/HDFLook

get_archive_metadata_val() {
    local f=$1 v=$2
    $PGE_SUITE_BASE/bin/ncget $f :ArchiveMetadata.0 | sed -n -e \
    "/OBJECT\\s*=\\s$v/,/END_OBJECT\\s*=\\s$v/ s/.*VALUE\\s*=\\s\(.*\)/\1/p"
}

max_float() {
    local res=`echo "$1 &gt; $2" | bc`
    if [ $res -eq 1 ] ; then 
        echo $1
    else
        echo $2
    fi
}

min_float() {
    local res=`echo "$1 &gt; $2" | bc`
    if [ $res -eq 1 ] ; then 
        echo $2
    else
        echo $1
    fi
}

cd $log_dir
run_id="mcd43a4-mosaic.`hostname`.`date +%s`.$$"

lat_max=$(get_archive_metadata_val ${mcd43a4[0]} "NORTHBOUNDINGCOORDINATE")
lat_min=$(get_archive_metadata_val ${mcd43a4[0]} "SOUTHBOUNDINGCOORDINATE")
lon_max=$(get_archive_metadata_val ${mcd43a4[0]} "EASTBOUNDINGCOORDINATE")
lon_min=$(get_archive_metadata_val ${mcd43a4[0]} "WESTBOUNDINGCOORDINATE")

for f in ${mcd43a4[@]} ; do
    cur_lat_max=$(get_archive_metadata_val $f "NORTHBOUNDINGCOORDINATE")
    cur_lat_min=$(get_archive_metadata_val $f "SOUTHBOUNDINGCOORDINATE")
    cur_lon_max=$(get_archive_metadata_val $f "EASTBOUNDINGCOORDINATE")
    cur_lon_min=$(get_archive_metadata_val $f "WESTBOUNDINGCOORDINATE")    

    lat_max=$(max_float $lat_max $cur_lat_max)
    lat_min=$(min_float $lat_min $cur_lat_min)
    lon_max=$(max_float $lon_max $cur_lon_max)
    lon_min=$(min_float $lon_min $cur_lon_min)
done

mosaic_file="BRDF_mosaic-${stopdate}"
hdflook_script="${log_dir}/hdflook.${run_id}"

cat &gt; $hdflook_script &lt;&lt; EOF
verbose
clear_data
set_output_directory ${log_dir}

set_misc_options CloudsRGBEnhance=Yes
set_image_background color=Black
#set_misc_options OnlyDay=Yes
set_projection_to_geometry ProjectionTo="LINEAR" \\
   PIXELSIZEXTO=1000 PIXELSIZEYTO=1000 WIDTHTO=5200 HEIGHTTO=3000 \\
   LatitudeMinTo=$lat_min LatitudeMaxTo=$lat_max \\
   LongitudeMinTo=$lon_min LongitudeMaxTo=$lon_max

set_input_hdf_file ${mcd43a4[0]}
set_image_RGB_composite USERRGB \\
   SDSNameR="Nadir_Reflectance_Band1" SDSNoR=1 IndexR=height,width,1 ComplementR=No minR=200 maxR=9600 \\
   SDSNameG="Nadir_Reflectance_Band4" SDSNoG=4 IndexG=height,width,1 ComplementG=No minG=200 maxG=9600 \\
   SDSNameB="Nadir_Reflectance_Band3" SDSNoB=3 IndexB=height,width,1 ComplementB=No minB=200 maxB=9600 
create_MODIS_RGB_Mosaic FileName="$mosaic_file" ClearFile=Yes BottomPixelFiller=2 CreateJPEG=yes RGBMode="Log"

EOF

mcd43a4_last_idx=$(( ${#mcd43a4[@]} - 1 ))
mcd43a4_last=${mcd43a4[$mcd43a4_last_idx]}
unset mcd43a4[0]
unset mcd43a4[$mcd43a4_last_idx]

for f in ${mcd43a4[@]} ; do
cat &gt;&gt; $hdflook_script &lt;&lt; EOF
set_input_hdf_file $f
set_image_RGB_composite USERRGB \\
   SDSNameR="Nadir_Reflectance_Band1" SDSNoR=1 IndexR=height,width,1 ComplementR=No minR=200 maxR=9600 \\
   SDSNameG="Nadir_Reflectance_Band4" SDSNoG=4 IndexG=height,width,1 ComplementG=No minG=200 maxG=9600 \\
   SDSNameB="Nadir_Reflectance_Band3" SDSNoB=3 IndexB=height,width,1 ComplementB=No minB=200 maxB=9600 
create_MODIS_RGB_Mosaic FileName="$mosaic_file" ClearFile=No BottomPixelFiller=2 CreateJPEG=yes RGBMode="Log"
EOF
done

cat &gt;&gt; $hdflook_script &lt;&lt; EOF
set_input_hdf_file $mcd43a4_last
set_image_RGB_composite USERRGB \\
   SDSNameR="Nadir_Reflectance_Band1" SDSNoR=1 IndexR=height,width,1 ComplementR=No minR=200 maxR=9600 \\
   SDSNameG="Nadir_Reflectance_Band4" SDSNoG=4 IndexG=height,width,1 ComplementG=No minG=200 maxG=9600 \\
   SDSNameB="Nadir_Reflectance_Band3" SDSNoB=3 IndexB=height,width,1 ComplementB=No minB=200 maxB=9600 
create_MODIS_RGB_Mosaic FileName="$mosaic_file" ClearFile=No BottomPixelFiller=2 CreateJPEG=yes RGBMode="Log" CreateGEOTIFF=Yes
EOF

$HDFLOOK $hdflook_script

if [ -f "${log_dir}/${mosaic_file}.tif" ] ; then 
	mosaic_tif="${output_dir}/${mosaic_file}.tif" ; 
	mv "${log_dir}/${mosaic_file}.tif" "$mosaic_tif"
fi

if [ -f "${log_dir}/${mosaic_file}.jpg" ] ; then 
	mosaic_jpg="${output_dir}/${mosaic_file}.jpg" ; 
	mv "${log_dir}/${mosaic_file}.jpg" "$mosaic_jpg"
fi

</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>stopdate</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mcd43a4</name>
      <type>SIMPLE</type>
      <depth>1</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mosaic_tif</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>mosaic_jpg</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><port name="stopdate" depth="0" /><port name="log_dir" depth="0" /><port name="output_dir" depth="0" /><port name="mcd43a4" depth="1" /></dot><port name="config" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Merge_PDS</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>path</name><depth>0</depth></port><port><name>path_dir</name><depth>0</depth></port><port><name>path_log_dir</name><depth>0</depth></port><port><name>src_dir</name><depth>0</depth></port><port><name>full_date</name><depth>0</depth></port></inputPorts><outputPorts><port><name>cnstr</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>granule_length</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>pds_orig</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>starttime</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>stoptime</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>apid957</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="path_log_dir" to="path_log_dir" /><map from="full_date" to="full_date" /><map from="path" to="path" /><map from="config" to="config" /><map from="path_dir" to="path_dir" /><map from="src_dir" to="src_dir" /></inputMap><outputMap><map from="starttime" to="starttime" /><map from="cnstr" to="cnstr" /><map from="granule_length" to="granule_length" /><map from="apid957" to="apid957" /><map from="stoptime" to="stoptime" /><map from="pds_orig" to="pds_orig" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e

source "$PGSHOME/bin/linux/pgs-env.ksh"
cd "${path_log_dir}"

month=`date -d"$full_date" +%m`
case "$month" in
    "1"|"01") month_str="JAN" ;;
    "2"|"02") month_str="FEB" ;;
    "3"|"03") month_str="MAR" ;;
    "4"|"04") month_str="APR" ;;
    "5"|"05") month_str="MAY" ;;
    "6"|"06") month_str="JUN" ;;
    "7"|"07") month_str="JUL" ;;
    "8"|"08") month_str="AUG" ;;
    "9"|"09") month_str="SEP" ;;
    "10")     month_str="OCT" ;;
    "11")     month_str="NOV" ;;
    "12")     month_str="DEC" ;;
    *) echo "Month $month is incorrect" &gt;&amp;2; 
	   exit 1
	;;
esac
pds_date=`date -d"$full_date" +%d-${month_str}-%Y`
pds_files=""
candidates=`find $src_dir -name "clear_*_${pds_date}_*.isp"`
for p in $candidates ; do 
    pbase=`basename $p`
	cpath=`$PGE_SUITE_BASE/scripts/get_path_num.pl $pbase`
	if [ "$cpath" -eq "$path" ] ; then
		pds_files="$p $pds_files"
	fi
done

pds_orig="${path_log_dir}/${path}.pcf"
cnstr="${path_log_dir}/${path}.cnstr"
grantimes="${path_log_dir}/${path}.grantimes"
apid957="${path_log_dir}/${path}.apid957"

export PGS_PC_INFO_FILE="$PGE_SUITE_BASE/ancillary/PGE01/l0merge_modis.pcf"
$PGE_SUITE_BASE/bin/l0merge_modis -c "$cnstr" -o "$pds_orig" -a "$apid957" \
  $pds_files 2&gt; $grantimes
cat $grantimes

starttime=`sed -n -e "s/starttime=\(.*\)Z/\1/p" $grantimes`
stoptime=`sed -n -e "s/stoptime =\(.*\)Z/\1/p" $grantimes`
granule_length=`sed -n -e "s/granule length =\(.*\)/\1/p" $grantimes`</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>path</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>path_log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>path_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>src_dir</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>full_date</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>cnstr</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>starttime</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>stoptime</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>granule_length</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>pds_orig</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>apid957</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><prefix><cross><port name="src_dir" depth="0" /><port name="full_date" depth="0" /></cross><dot><port name="path" depth="0" /><port name="path_dir" depth="0" /><port name="path_log_dir" depth="0" /></dot></prefix></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Path_dir</name><inputPorts><port><name>path</name><depth>0</depth></port><port><name>day_dir</name><depth>0</depth></port><port><name>day_log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>path_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>path_log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="day_dir" to="day_dir" /><map from="path" to="path" /><map from="day_log_dir" to="day_log_dir" /></inputMap><outputMap><map from="path_log_dir" to="path_log_dir" /><map from="path_dir" to="path_dir" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>day_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>day_log_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>path</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>path_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>path_log_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>path_dir=day_dir+"/"+path;
path_log_dir=day_log_dir+"/"+path;</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>5</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><prefix><dot><port name="day_log_dir" depth="0" /><port name="day_dir" depth="0" /></dot><port name="path" depth="0" /></prefix></strategy></iteration></iterationStrategyStack></processor><processor><name>Granule_dir</name><inputPorts><port><name>path_dir</name><depth>0</depth></port><port><name>path_log_dir</name><depth>0</depth></port><port><name>hour</name><depth>0</depth></port><port><name>minute</name><depth>0</depth></port></inputPorts><outputPorts><port><name>granule_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>granule_log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="minute" to="minute" /><map from="path_log_dir" to="path_log_dir" /><map from="path_dir" to="path_dir" /><map from="hour" to="hour" /></inputMap><outputMap><map from="granule_dir" to="granule_dir" /><map from="granule_log_dir" to="granule_log_dir" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>path_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>path_log_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>hour</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>minute</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>granule_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>granule_tiff_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>granule_log_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>granule_dir = path_dir + "/" + hour + minute;
granule_tiff_dir = granule_dir + "/tiff";
granule_log_dir = path_log_dir + "/" + hour + minute;</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><prefix><dot><port name="path_dir" depth="0" /><port name="path_log_dir" depth="0" /></dot><dot><port name="hour" depth="0" /><port name="minute" depth="0" /></dot></prefix></strategy></iteration></iterationStrategyStack></processor><processor><name>Tile_day_dir</name><inputPorts><port><name>day_dir</name><depth>0</depth></port><port><name>day_log_dir</name><depth>0</depth></port><port><name>H</name><depth>0</depth></port><port><name>V</name><depth>0</depth></port><port><name>tile_name</name><depth>0</depth></port></inputPorts><outputPorts><port><name>tile_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>tile_log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>H</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>V</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="V" to="V" /><map from="day_dir" to="day_dir" /><map from="tile_name" to="tile_name" /><map from="H" to="H" /><map from="day_log_dir" to="day_log_dir" /></inputMap><outputMap><map from="V" to="V" /><map from="tile_log_dir" to="tile_log_dir" /><map from="H" to="H" /><map from="tile_dir" to="tile_dir" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>day_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>tile_name</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>H</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>V</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>day_log_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>tile_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>tile_log_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>H</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>V</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>tile_dir = day_dir + "/" + tile_name;
tile_log_dir = day_log_dir + "/" + tile_name;</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><port name="day_log_dir" depth="0" /><port name="day_dir" depth="0" /></dot><dot><port name="V" depth="0" /><port name="tile_name" depth="0" /><port name="H" depth="0" /></dot></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Satellites</name><inputPorts><port><name>config</name><depth>0</depth></port></inputPorts><outputPorts><port><name>out_root</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>log_root</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>src_root</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>sat_id</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="config" to="config" /></inputMap><outputMap><map from="log_root" to="log_root" /><map from="out_root" to="out_root" /><map from="src_root" to="src_root" /><map from="sat_id" to="sat_id" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>config</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>sat_id</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>out_root</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>log_root</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>src_root</name>
      <depth>1</depth>
      <mimeTypes />
      <granularDepth>1</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>sat_id = new ArrayList();
out_root = new ArrayList();
log_root = new ArrayList();
src_root = new ArrayList();

id = "AM1M";
sat_id.add(id);
out_root.add(config{id + "_WORK_DIR_ROOT"});
log_root.add(config{id + "_LOG_DIR_ROOT"});
src_root.add(config{id + "_PDS_DIR"});

id = "PM1M";
sat_id.add(id);
out_root.add(config{id + "_WORK_DIR_ROOT"});
log_root.add(config{id + "_LOG_DIR_ROOT"});
src_root.add(config{id + "_PDS_DIR"});</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.BoringNodeAnnotation">
        <text>outputs</text>
      </annotationBean>
      <date>2012-12-04 16:36:54.985 NOVT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Composite_day_dir</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>jday</name><depth>0</depth></port><port><name>year</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>composite_day_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>composite_day_log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="log_dir" to="log_dir" /><map from="jday" to="jday" /><map from="config" to="config" /><map from="year" to="year" /></inputMap><outputMap><map from="composite_day_dir" to="composite_day_dir" /><map from="composite_day_log_dir" to="composite_day_log_dir" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e

composite_day_dir="$COMPOSITE_WORK_DIR_ROOT/$year/$jday"
[ -e "$composite_day_dir" ] &amp;&amp; rm -rf "$composite_day_dir"
mkdir -p "$composite_day_dir"

composite_day_log_dir="$COMPOSITE_LOG_DIR_ROOT/$year/$jday"
[ -e "$composite_day_log_dir" ] &amp;&amp; rm -rf "$composite_day_log_dir"
mkdir -p "$composite_day_log_dir"</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>jday</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>year</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>composite_day_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>composite_day_log_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><port name="year" depth="0" /><port name="jday" depth="0" /></dot><port name="config" depth="0" /><port name="log_dir" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Composite_tile_dir</name><inputPorts><port><name>day_dir</name><depth>0</depth></port><port><name>day_log_dir</name><depth>0</depth></port><port><name>tile_name</name><depth>0</depth></port></inputPorts><outputPorts><port><name>tile_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>tile_log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="day_dir" to="day_dir" /><map from="tile_name" to="tile_name" /><map from="day_log_dir" to="day_log_dir" /></inputMap><outputMap><map from="tile_log_dir" to="tile_log_dir" /><map from="tile_dir" to="tile_dir" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>day_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>day_log_dir</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>tile_name</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>tile_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>tile_log_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>tile_dir = day_dir + "/" + tile_name;
tile_log_dir = day_log_dir + "/" + tile_name;</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><port name="day_log_dir" depth="0" /><port name="day_dir" depth="0" /></dot><port name="tile_name" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>TIFF_MOD09</name><inputPorts><port><name>mod03</name><depth>0</depth></port><port><name>sds</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port><port><name>modxx</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>sds</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>tiff</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="sds" to="sds" /><map from="config" to="config" /><map from="mod03" to="mod03" /><map from="modxx" to="modxx" /></inputMap><outputMap><map from="sds" to="sds" /><map from="tiff" to="tiff" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>set -e

export MRTDATADIR=$PGE_SUITE_BASE/opt/mrtswath/data
export MRTBINDIR=$PGE_SUITE_BASE/opt/mrtswath/bin

run_id="TIFF.`basename $modxx`.`hostname`.$$.`date +%s`"
temp_dir="${TEMP_DIR_ROOT}/${run_id}" 
mkdir -p $temp_dir
cd $temp_dir

tiff=$output_dir/`basename $modxx`

$MRTBINDIR/swath2grid -if=$modxx -of=$tiff -gf=$mod03 -sds="$sds" \
	-off=GEOTIFF_FMT -oproj=GEO -osp=8

rm -rf $temp_dir
tiff=`ls ${tiff%.hdf}*`
! [ -f "$tiff" ] &amp;&amp; exit 1</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>modxx</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>mod03</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sds</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>tiff</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>sds</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><dot><port name="mod03" depth="0" /><port name="output_dir" depth="0" /><port name="modxx" depth="0" /></dot><port name="sds" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>WMS_Overlay_config</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>all_bands</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>b_band</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>g_band</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>r_band</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>name</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>rasters_dir</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>vrts_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="log_dir" to="log_dir" /><map from="config" to="config" /></inputMap><outputMap><map from="g_band" to="g_band" /><map from="rasters_dir" to="rasters_dir" /><map from="b_band" to="b_band" /><map from="vrts_dir" to="vrts_dir" /><map from="name" to="name" /><map from="all_bands" to="all_bands" /><map from="r_band" to="r_band" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>config=$PGE_SUITE_BASE/etc/modis_overlay.conf

all_bands=( `cat $config | cut -d" " -f2- | tr " " "\n" | sort | uniq` )

declare -a r_band
declare -a g_band
declare -a b_band
index=0

while read line ; do
	arr=( $line )
	name[$index]=${arr[0]}
	r_band[$index]=${arr[1]}
	g_band[$index]=${arr[2]}
	b_band[$index]=${arr[3]}
	index=$(( $index + 1 ))
done &lt; $config

rasters_dir=$WMS_OVERLAY_RASTERS_ROOT
vrts_dir=$WMS_OVERLAY_VRTS_ROOT

mkdir -p $rasters_dir
mkdir -p $vrts_dir</script>
  <interpreter />
  <schedulerName>direct</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>all_bands</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>b_band</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>g_band</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>r_band</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>name</name>
      <file>false</file>
      <list>true</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>rasters_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>vrts_dir</name>
      <file>false</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><port name="log_dir" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>TIFF_MOD09_filter</name><inputPorts><port><name>b_band</name><depth>0</depth></port><port><name>g_band</name><depth>0</depth></port><port><name>r_band</name><depth>0</depth></port><port><name>sds</name><depth>1</depth></port><port><name>tiff</name><depth>1</depth></port></inputPorts><outputPorts><port><name>b_tiff</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>g_tiff</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>r_tiff</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="g_band" to="g_band" /><map from="sds" to="sds" /><map from="b_band" to="b_band" /><map from="r_band" to="r_band" /><map from="tiff" to="tiff" /></inputMap><outputMap><map from="b_tiff" to="b_tiff" /><map from="r_tiff" to="r_tiff" /><map from="g_tiff" to="g_tiff" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>tiff</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>sds</name>
      <depth>1</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>r_band</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>g_band</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>b_band</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>r_tiff</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>g_tiff</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>b_tiff</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>r_tiff = null;
g_tiff = null;
b_tiff = null;

for (int i=0; i&lt;tiff.size(); ++i) {
	String cur_sds = sds.get(i);
	Object cur_tiff = tiff.get(i);
	switch (cur_sds) {
		case r_band:
			r_tiff = cur_tiff;
			break;
		case g_band:
			g_tiff = cur_tiff;
			break;
		case b_band:
			b_tiff = cur_tiff;
			break;
	}	
}</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><port name="r_band" depth="0" /><port name="g_band" depth="0" /><port name="b_band" depth="0" /></dot><dot><port name="tiff" depth="1" /><port name="sds" depth="1" /></dot></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>TIFF_cleanup</name><inputPorts><port><name>tiff</name><depth>0</depth></port></inputPorts><outputPorts /><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="tiff" to="tiff" /></inputMap><outputMap /><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>rm $tiff</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>tiff</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts />
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="tiff" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>TIFF_MOD09_Tricolor</name><inputPorts><port><name>b_tiff</name><depth>0</depth></port><port><name>g_tiff</name><depth>0</depth></port><port><name>r_tiff</name><depth>0</depth></port><port><name>output_dir</name><depth>0</depth></port><port><name>name</name><depth>0</depth></port><port><name>config</name><depth>0</depth></port></inputPorts><outputPorts><port><name>tiff_tricolor</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="output_dir" to="output_dir" /><map from="b_tiff" to="b_tiff" /><map from="r_tiff" to="r_tiff" /><map from="g_tiff" to="g_tiff" /><map from="name" to="name" /><map from="config" to="config" /></inputMap><outputMap><map from="tiff_tricolor" to="tiff_tricolor" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>run_id="tricolor.$name.`hostname`.`date +%s`".$$
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

tiff_tricolor=$output_dir/$run_id.tif
runidl=$output_dir/runidl.pro

cat &gt; $runidl &lt;&lt; EOF
!path = '$PGE_SUITE_BASE/scripts/modis_overlay/idl:' + !path

compile_opt idl2
ENVI, /RESTORE_BASE_SAVE_FILES
ENVI_BATCH_INIT, /NO_STATUS_WINDOW

tricolor, '$r_tiff', '$g_tiff', '$b_tiff', -100, 16000, -28672, 0.4, '$tiff_tricolor'

envi_batch_exit
exit
EOF

source $ENVI_CONFIG
$IDL_DIR/bin/idl $runidl

rm -rf $temp_dir
! [ -f $tiff_tricolor ] &amp;&amp; exit 1</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>r_tiff</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>g_tiff</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>b_tiff</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>output_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>name</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>tiff_tricolor</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><dot><cross><port name="name" depth="0" /><port name="output_dir" depth="0" /></cross><port name="r_tiff" depth="0" /><port name="g_tiff" depth="0" /><port name="b_tiff" depth="0" /></dot></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>TIFF_MOD09_Mosaic</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>date</name><depth>0</depth></port><port><name>log_dir</name><depth>0</depth></port><port><name>sat_id</name><depth>0</depth></port><port><name>tiff_tricolor</name><depth>2</depth></port><port><name>name</name><depth>0</depth></port><port><name>rasters_dir</name><depth>0</depth></port><port><name>vrts_dir</name><depth>0</depth></port></inputPorts><outputPorts><port><name>tiff_mosaic</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>vrt</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.activity.BashFileActivity</class><inputMap><map from="rasters_dir" to="rasters_dir" /><map from="sat_id" to="sat_id" /><map from="vrts_dir" to="vrts_dir" /><map from="name" to="name" /><map from="log_dir" to="log_dir" /><map from="tiff_tricolor" to="tiff_tricolor" /><map from="config" to="config" /><map from="date" to="date" /></inputMap><outputMap><map from="vrt" to="vrt" /><map from="tiff_mosaic" to="tiff_mosaic" /></outputMap><configBean encoding="xstream"><ru.nsc.ict.taverna.activity.BashFileActivityConfig xmlns="">
  <script>run_id="mosaic.$name.`hostname`.`date +%s`".$$
temp_dir="${TEMP_DIR_ROOT}/${run_id}"
mkdir -p $temp_dir
cd $temp_dir

date_str=`date --date="$date" +%Y%m%d`

#Create mosaic tiff

print_array() {
	printf "$1 = [ "
	shift
	if [ $# -gt 0 ] ; then
		printf "\'$1\'"
		shift
		for i in $@ ; do
			printf ", \'$i\'"
		done
	fi
	printf " ]\n"
}

if [ "$sat_id" == "AM1M" ] ; then
	vrt=${vrts_dir}/terr_500m_${date_str}_${name}.vrt
	tiff_mosaic_base=MOD09_A${date_str}_500m_${name}.tif
elif [ "$sat_id" == "PM1M" ] ; then
	vrt=${vrts_dir}/aqua_500m_${date_str}_${name}.vrt
	tiff_mosaic_base=MYD09_A${date_str}_500m_${name}.tif
else
	echo "Unknown satellite" &gt;&amp;2
	exit 1
fi
tiff_mosaic=${rasters_dir}/${tiff_mosaic_base}

mosaic_pro=$log_dir/mosaic.pro
cat &gt; $mosaic_pro &lt;&lt; EOF
!path = '$PGE_SUITE_BASE/scripts/modis_overlay/idl:' + !path

compile_opt idl2
ENVI, /RESTORE_BASE_SAVE_FILES
ENVI_BATCH_INIT, /NO_STATUS_WINDOW

$( print_array "filenames" ${tiff_tricolor[@]} )
joinscenes, filenames, '$temp_dir/temp.img', '$tiff_mosaic'

envi_batch_exit
exit
EOF

if [ "${tiff_tricolor[@]}" == "" ] ; then
	rm -rf $temp_dir
	exit 1
fi
source $ENVI_CONFIG
$IDL_DIR/bin/idl $mosaic_pro


#Create VRT
temp_vrt=${temp_dir}/vrt
gdal_translate -of VRT $tiff_mosaic $temp_vrt
$PGE_SUITE_BASE/scripts/modis_overlay/fix_vrt.pl &lt; $temp_vrt &gt; $vrt

rm -rf ${tiff_tricolor[@]}
rm -rf $temp_dir
! [ -f $tiff_mosaic ] &amp;&amp; exit 1
! [ -f $vrt ] &amp;&amp; exit 1</script>
  <interpreter />
  <schedulerName>default</schedulerName>
  <inputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>config</name>
      <type>MAP</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>log_dir</name>
      <type>LOG_PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>name</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>tiff_tricolor</name>
      <type>SIMPLE</type>
      <depth>2</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>date</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>sat_id</name>
      <type>SIMPLE</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>rasters_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
      <name>vrts_dir</name>
      <type>PATH</type>
      <depth>0</depth>
    </ru.nsc.ict.taverna.activity.BashFileActivityInputPort>
  </inputPorts>
  <outputPorts>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>tiff_mosaic</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
    <ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
      <name>vrt</name>
      <file>true</file>
      <list>false</list>
    </ru.nsc.ict.taverna.activity.BashFileActivityOutputPort>
  </outputPorts>
</ru.nsc.ict.taverna.activity.BashFileActivityConfig></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>100</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>ru.nsc.ict.taverna</group><artifact>modis-activity-core</artifact><version>0.0.1-SNAPSHOT</version></raven><class>ru.nsc.ict.taverna.dispatch.ListSanitizer</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><dot><cross><port name="name" depth="0" /><dot><cross><port name="sat_id" depth="0" /><port name="date" depth="0" /></cross><port name="log_dir" depth="0" /></dot></cross><port name="tiff_tricolor" depth="2" /></dot><port name="config" depth="0" /><port name="rasters_dir" depth="0" /><port name="vrts_dir" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Log_dir</name><inputPorts><port><name>config</name><depth>0</depth></port><port><name>start_date</name><depth>0</depth></port><port><name>stop_date</name><depth>0</depth></port></inputPorts><outputPorts><port><name>log_dir</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="stop_date" to="stop_date" /><map from="config" to="config" /><map from="start_date" to="start_date" /></inputMap><outputMap><map from="log_dir" to="log_dir" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>config</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>start_date</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <name>stop_date</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <name>log_dir</name>
      <depth>0</depth>
      <mimeTypes />
      <granularDepth>0</granularDepth>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <script>log_dir=config{"LOG_DIR_ROOT"}+"/taverna/"+start_date+"-"+stop_date;</script>
  <dependencies />
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="config" depth="0" /><port name="start_date" depth="0" /><port name="stop_date" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions><condition control="MCD43_mosaic" target="Wait_for_copy" /><condition control="TIFF_MOD09_Tricolor" target="TIFF_cleanup" /><condition control="MCD43_tile_pic" target="Wait_for_copy" /><condition control="MOD13" target="Wait_for_copy" /><condition control="TIFF_MOD09_Mosaic" target="Wait_for_copy" /><condition control="MOD10" target="Wait_for_copy" /><condition control="MOD09G" target="Wait_for_copy" /><condition control="MOD14" target="Wait_for_copy" /><condition control="MOD04_05" target="Wait_for_copy" /></conditions><datalinks><datalink><sink type="processor"><processor>Generate_dates</processor><port>stop_date</port></sink><source type="dataflow"><port>stop_date</port></source></datalink><datalink><sink type="processor"><processor>Generate_dates</processor><port>start_date</port></sink><source type="dataflow"><port>start_date</port></source></datalink><datalink><sink type="processor"><processor>Generate_dates</processor><port>log_dir</port></sink><source type="processor"><processor>Log_dir</processor><port>log_dir</port></source></datalink><datalink><sink type="processor"><processor>Config_parser</processor><port>config_data</port></sink><source type="dataflow"><port>config_data</port></source></datalink><datalink><sink type="processor"><processor>Tile_params</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>Tile_params</processor><port>log_dir</port></sink><source type="processor"><processor>Log_dir</processor><port>log_dir</port></source></datalink><datalink><sink type="processor"><processor>Sat_day_dir</processor><port>jday</port></sink><source type="processor"><processor>Generate_dates</processor><port>jday</port></source></datalink><datalink><sink type="processor"><processor>Sat_day_dir</processor><port>year</port></sink><source type="processor"><processor>Generate_dates</processor><port>year</port></source></datalink><datalink><sink type="processor"><processor>Sat_day_dir</processor><port>out_root</port></sink><source type="processor"><processor>Satellites</processor><port>out_root</port></source></datalink><datalink><sink type="processor"><processor>Sat_day_dir</processor><port>log_root</port></sink><source type="processor"><processor>Satellites</processor><port>log_root</port></source></datalink><datalink><sink type="processor"><processor>Sat_day_dir</processor><port>log_dir</port></sink><source type="processor"><processor>Log_dir</processor><port>log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD01_next</processor><port>data</port></sink><source type="processor"><processor>MOD01</processor><port>mod01_granules</port></source></datalink><datalink><sink type="processor"><processor>MOD01_prev</processor><port>data</port></sink><source type="processor"><processor>MOD01</processor><port>mod01_granules</port></source></datalink><datalink><sink type="processor"><processor>16days_window</processor><port>start_date</port></sink><source type="dataflow"><port>start_date</port></source></datalink><datalink><sink type="processor"><processor>16days_window</processor><port>stop_date</port></sink><source type="dataflow"><port>stop_date</port></source></datalink><datalink><sink type="processor"><processor>16days_window</processor><port>log_dir</port></sink><source type="processor"><processor>Log_dir</processor><port>log_dir</port></source></datalink><datalink><sink type="processor"><processor>16days_dir</processor><port>gran_stopdate</port></sink><source type="processor"><processor>16days_window</processor><port>gran_stopdate</port></source></datalink><datalink><sink type="processor"><processor>16days_dir</processor><port>tile_name</port></sink><source type="processor"><processor>Tile_params</processor><port>tile_name</port></source></datalink><datalink><sink type="processor"><processor>16days_dir</processor><port>log_root</port></sink><source type="processor"><processor>Satellites</processor><port>log_root</port></source></datalink><datalink><sink type="processor"><processor>16days_dir</processor><port>out_root</port></sink><source type="processor"><processor>Satellites</processor><port>out_root</port></source></datalink><datalink><sink type="processor"><processor>16days_dir</processor><port>log_dir</port></sink><source type="processor"><processor>Log_dir</processor><port>log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>cnstr</port></sink><source type="processor"><processor>Merge_PDS</processor><port>cnstr</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>granule_length</port></sink><source type="processor"><processor>Merge_PDS</processor><port>granule_length</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>log_dir</port></sink><source type="processor"><processor>Path_dir</processor><port>path_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>output_dir</port></sink><source type="processor"><processor>Path_dir</processor><port>path_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>pds</port></sink><source type="processor"><processor>Merge_PDS</processor><port>pds_orig</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>starttime</port></sink><source type="processor"><processor>Merge_PDS</processor><port>starttime</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>stoptime</port></sink><source type="processor"><processor>Merge_PDS</processor><port>stoptime</port></source></datalink><datalink><sink type="processor"><processor>MOD01</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>mod01_cur</port></sink><source type="processor"><processor>MOD01</processor><port>mod01_granules</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>mod01_next</port></sink><source type="processor"><processor>MOD01_next</processor><port>res</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>mod01_prev</port></sink><source type="processor"><processor>MOD01_prev</processor><port>res</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD02</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD03</processor><port>mod01_granule</port></sink><source type="processor"><processor>MOD01</processor><port>mod01_granules</port></source></datalink><datalink><sink type="processor"><processor>MOD03</processor><port>mod01_metadata</port></sink><source type="processor"><processor>MOD01</processor><port>mod01_metadata</port></source></datalink><datalink><sink type="processor"><processor>MOD03</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD03</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD03</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD03</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD03</processor><port>apid957</port></sink><source type="processor"><processor>Merge_PDS</processor><port>apid957</port></source></datalink><datalink><sink type="processor"><processor>MODPT</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MODPT</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MODPT</processor><port>output_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MODPT</processor><port>log_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MODPT</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MODPT</processor><port>v</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>V</port></source></datalink><datalink><sink type="processor"><processor>MODPT</processor><port>h</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>H</port></source></datalink><datalink><sink type="processor"><processor>MOD09GHK</processor><port>modpthkm</port></sink><source type="processor"><processor>MODPT</processor><port>modpthkm</port></source></datalink><datalink><sink type="processor"><processor>MOD09GHK</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD09GHK</processor><port>mod09</port></sink><source type="processor"><processor>MOD09</processor><port>mod09</port></source></datalink><datalink><sink type="processor"><processor>MOD09GHK</processor><port>output_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09GHK</processor><port>log_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09GHK</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MODMGGAD</processor><port>modpt1kd</port></sink><source type="processor"><processor>MODPT</processor><port>modpt1kd</port></source></datalink><datalink><sink type="processor"><processor>MODMGGAD</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MODMGGAD</processor><port>output_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MODMGGAD</processor><port>log_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MODMGGAD</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MODMGGAD</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD09GST</processor><port>modpt1kd</port></sink><source type="processor"><processor>MODPT</processor><port>modpt1kd</port></source></datalink><datalink><sink type="processor"><processor>MOD09GST</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD09GST</processor><port>mod09</port></sink><source type="processor"><processor>MOD09</processor><port>mod09</port></source></datalink><datalink><sink type="processor"><processor>MOD09GST</processor><port>log_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09GST</processor><port>output_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09GST</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD09GQK</processor><port>modptqkm</port></sink><source type="processor"><processor>MODPT</processor><port>modptqkm</port></source></datalink><datalink><sink type="processor"><processor>MOD09GQK</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD09GQK</processor><port>log_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09GQK</processor><port>output_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09GQK</processor><port>mod09</port></sink><source type="processor"><processor>MOD09</processor><port>mod09</port></source></datalink><datalink><sink type="processor"><processor>MOD09GQK</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS</processor><port>mod021km</port></sink><source type="processor"><processor>MOD02</processor><port>mod021km</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS</processor><port>starttime</port></sink><source type="processor"><processor>MOD01</processor><port>g_starttime</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS_500m</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS_500m</processor><port>mod02hkm</port></sink><source type="processor"><processor>MOD02</processor><port>mod02hkm</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS_500m</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS_500m</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS_500m</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MODKMDS_500m</processor><port>starttime</port></sink><source type="processor"><processor>MOD01</processor><port>g_starttime</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>mod021km</port></sink><source type="processor"><processor>MOD02</processor><port>mod021km</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>mod02qkm</port></sink><source type="processor"><processor>MOD02</processor><port>mod02qkm</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>mod1kmds</port></sink><source type="processor"><processor>MODKMDS</processor><port>mod1kmds</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>starttime</port></sink><source type="processor"><processor>MOD01</processor><port>g_starttime</port></source></datalink><datalink><sink type="processor"><processor>MOD35</processor><port>stoptime</port></sink><source type="processor"><processor>MOD01</processor><port>g_stoptime</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>mod35</port></sink><source type="processor"><processor>MOD35</processor><port>mod35</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>mod1kmds</port></sink><source type="processor"><processor>MODKMDS</processor><port>mod1kmds</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>modhkmds</port></sink><source type="processor"><processor>MODKMDS_500m</processor><port>modhkmds</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>mod02qkm</port></sink><source type="processor"><processor>MOD02</processor><port>mod02qkm</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>starttime</port></sink><source type="processor"><processor>MOD01</processor><port>g_starttime</port></source></datalink><datalink><sink type="processor"><processor>MOD09</processor><port>stoptime</port></sink><source type="processor"><processor>MOD01</processor><port>g_stoptime</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>mod35</port></sink><source type="processor"><processor>MOD35</processor><port>mod35</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>mod021km</port></sink><source type="processor"><processor>MOD02</processor><port>mod021km</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>mod1kmds</port></sink><source type="processor"><processor>MODKMDS</processor><port>mod1kmds</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>starttime</port></sink><source type="processor"><processor>MOD01</processor><port>g_starttime</port></source></datalink><datalink><sink type="processor"><processor>MOD07</processor><port>stoptime</port></sink><source type="processor"><processor>MOD01</processor><port>g_stoptime</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>mod35</port></sink><source type="processor"><processor>MOD35</processor><port>mod35</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>mod02hkm</port></sink><source type="processor"><processor>MOD02</processor><port>mod02hkm</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>mod021km</port></sink><source type="processor"><processor>MOD02</processor><port>mod021km</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD10</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>mod07</port></sink><source type="processor"><processor>MOD07</processor><port>mod07</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>mod35</port></sink><source type="processor"><processor>MOD35</processor><port>mod35</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>mod02qkm</port></sink><source type="processor"><processor>MOD02</processor><port>mod02qkm</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>mod02hkm</port></sink><source type="processor"><processor>MOD02</processor><port>mod02hkm</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>mod021km</port></sink><source type="processor"><processor>MOD02</processor><port>mod021km</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>starttime</port></sink><source type="processor"><processor>MOD01</processor><port>g_starttime</port></source></datalink><datalink><sink type="processor"><processor>MOD04_05</processor><port>stoptime</port></sink><source type="processor"><processor>MOD01</processor><port>g_stoptime</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>modmggad</port></sink><source type="processor"><processor>MODMGGAD</processor><port>modmggad</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>mod09gqk</port></sink><source type="processor"><processor>MOD09GQK</processor><port>mod09gqk</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>mod09ghk</port></sink><source type="processor"><processor>MOD09GHK</processor><port>mod09ghk</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>mod09gst</port></sink><source type="processor"><processor>MOD09GST</processor><port>mod09gst</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>modpt1kd</port></sink><source type="processor"><processor>MODPT</processor><port>modpt1kd</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>modpthkm</port></sink><source type="processor"><processor>MODPT</processor><port>modpthkm</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>modptqkm</port></sink><source type="processor"><processor>MODPT</processor><port>modptqkm</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>log_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>output_dir</port></sink><source type="processor"><processor>Tile_day_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD09G</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>h</port></sink><source type="processor"><processor>Tile_params</processor><port>H</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>output_dir</port></sink><source type="processor"><processor>16days_dir</processor><port>gran_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>startdate</port></sink><source type="processor"><processor>16days_window</processor><port>gran_startdate</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>stopdate</port></sink><source type="processor"><processor>16days_window</processor><port>gran_stopdate</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>phased</port></sink><source type="processor"><processor>16days_window</processor><port>phased</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>v</port></sink><source type="processor"><processor>Tile_params</processor><port>V</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>modmggad</port></sink><source type="processor"><processor>MODMGGAD</processor><port>modmggad</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>mod09ghk</port></sink><source type="processor"><processor>MOD09GHK</processor><port>mod09ghk</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>mod09gqk</port></sink><source type="processor"><processor>MOD09GQK</processor><port>mod09gqk</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>mod09gst</port></sink><source type="processor"><processor>MOD09GST</processor><port>mod09gst</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>modpthkm</port></sink><source type="processor"><processor>MODPT</processor><port>modpthkm</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>modptqkm</port></sink><source type="processor"><processor>MODPT</processor><port>modptqkm</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>log_dir</port></sink><source type="processor"><processor>16days_dir</processor><port>gran_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>out_root</port></sink><source type="processor"><processor>Satellites</processor><port>out_root</port></source></datalink><datalink><sink type="processor"><processor>MOD13</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>Find_paths</processor><port>day</port></sink><source type="processor"><processor>Generate_dates</processor><port>day_padded</port></source></datalink><datalink><sink type="processor"><processor>Find_paths</processor><port>month</port></sink><source type="processor"><processor>Generate_dates</processor><port>month_str</port></source></datalink><datalink><sink type="processor"><processor>Find_paths</processor><port>year</port></sink><source type="processor"><processor>Generate_dates</processor><port>year</port></source></datalink><datalink><sink type="processor"><processor>Find_paths</processor><port>src_dir</port></sink><source type="processor"><processor>Satellites</processor><port>src_root</port></source></datalink><datalink><sink type="processor"><processor>Find_paths</processor><port>log_dir</port></sink><source type="processor"><processor>Sat_day_dir</processor><port>day_log_dir</port></source></datalink><datalink><sink type="processor"><processor>Find_paths</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD14</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MOD14</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>MOD14</processor><port>mod021km</port></sink><source type="processor"><processor>MOD02</processor><port>mod021km</port></source></datalink><datalink><sink type="processor"><processor>MOD14</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD14</processor><port>log_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MOD14</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>stopdate</port></sink><source type="processor"><processor>Generate_dates</processor><port>date_full</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>mod09ghk</port></sink><source type="processor"><processor>MOD09GHK</processor><port>mod09ghk</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>mod09gst</port></sink><source type="processor"><processor>MOD09GST</processor><port>mod09gst</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>modmggad</port></sink><source type="processor"><processor>MODMGGAD</processor><port>modmggad</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>modpthkm</port></sink><source type="processor"><processor>MODPT</processor><port>modpthkm</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>h</port></sink><source type="processor"><processor>Tile_params</processor><port>H</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>v</port></sink><source type="processor"><processor>Tile_params</processor><port>V</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>output_dir</port></sink><source type="processor"><processor>Composite_tile_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>log_dir</port></sink><source type="processor"><processor>Composite_tile_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MCD43</processor><port>data_roots</port></sink><source type="processor"><processor>Satellites</processor><port>out_root</port></source></datalink><datalink><sink type="processor"><processor>MCD43_tile_pic</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MCD43_tile_pic</processor><port>mcd43a4</port></sink><source type="processor"><processor>MCD43</processor><port>mcd43a4</port></source></datalink><datalink><sink type="processor"><processor>MCD43_tile_pic</processor><port>output_dir</port></sink><source type="processor"><processor>Composite_tile_dir</processor><port>tile_dir</port></source></datalink><datalink><sink type="processor"><processor>MCD43_tile_pic</processor><port>log_dir</port></sink><source type="processor"><processor>Composite_tile_dir</processor><port>tile_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MCD43_mosaic</processor><port>mcd43a4</port></sink><source type="processor"><processor>MCD43</processor><port>mcd43a4</port></source></datalink><datalink><sink type="processor"><processor>MCD43_mosaic</processor><port>stopdate</port></sink><source type="processor"><processor>Generate_dates</processor><port>date_full</port></source></datalink><datalink><sink type="processor"><processor>MCD43_mosaic</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>MCD43_mosaic</processor><port>log_dir</port></sink><source type="processor"><processor>Composite_day_dir</processor><port>composite_day_log_dir</port></source></datalink><datalink><sink type="processor"><processor>MCD43_mosaic</processor><port>output_dir</port></sink><source type="processor"><processor>Composite_day_dir</processor><port>composite_day_dir</port></source></datalink><datalink><sink type="processor"><processor>Merge_PDS</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>Merge_PDS</processor><port>path</port></sink><source type="processor"><processor>Find_paths</processor><port>path</port></source></datalink><datalink><sink type="processor"><processor>Merge_PDS</processor><port>path_dir</port></sink><source type="processor"><processor>Path_dir</processor><port>path_dir</port></source></datalink><datalink><sink type="processor"><processor>Merge_PDS</processor><port>path_log_dir</port></sink><source type="processor"><processor>Path_dir</processor><port>path_log_dir</port></source></datalink><datalink><sink type="processor"><processor>Merge_PDS</processor><port>src_dir</port></sink><source type="processor"><processor>Satellites</processor><port>src_root</port></source></datalink><datalink><sink type="processor"><processor>Merge_PDS</processor><port>full_date</port></sink><source type="processor"><processor>Generate_dates</processor><port>date_full</port></source></datalink><datalink><sink type="processor"><processor>Path_dir</processor><port>path</port></sink><source type="processor"><processor>Find_paths</processor><port>path</port></source></datalink><datalink><sink type="processor"><processor>Path_dir</processor><port>day_dir</port></sink><source type="processor"><processor>Sat_day_dir</processor><port>day_dir</port></source></datalink><datalink><sink type="processor"><processor>Path_dir</processor><port>day_log_dir</port></sink><source type="processor"><processor>Sat_day_dir</processor><port>day_log_dir</port></source></datalink><datalink><sink type="processor"><processor>Granule_dir</processor><port>path_dir</port></sink><source type="processor"><processor>Path_dir</processor><port>path_dir</port></source></datalink><datalink><sink type="processor"><processor>Granule_dir</processor><port>path_log_dir</port></sink><source type="processor"><processor>Path_dir</processor><port>path_log_dir</port></source></datalink><datalink><sink type="processor"><processor>Granule_dir</processor><port>hour</port></sink><source type="processor"><processor>MOD01</processor><port>hour</port></source></datalink><datalink><sink type="processor"><processor>Granule_dir</processor><port>minute</port></sink><source type="processor"><processor>MOD01</processor><port>minute</port></source></datalink><datalink><sink type="processor"><processor>Tile_day_dir</processor><port>day_dir</port></sink><source type="processor"><processor>Sat_day_dir</processor><port>day_dir</port></source></datalink><datalink><sink type="processor"><processor>Tile_day_dir</processor><port>day_log_dir</port></sink><source type="processor"><processor>Sat_day_dir</processor><port>day_log_dir</port></source></datalink><datalink><sink type="processor"><processor>Tile_day_dir</processor><port>H</port></sink><source type="processor"><processor>Tile_params</processor><port>H</port></source></datalink><datalink><sink type="processor"><processor>Tile_day_dir</processor><port>V</port></sink><source type="processor"><processor>Tile_params</processor><port>V</port></source></datalink><datalink><sink type="processor"><processor>Tile_day_dir</processor><port>tile_name</port></sink><source type="processor"><processor>Tile_params</processor><port>tile_name</port></source></datalink><datalink><sink type="processor"><processor>Satellites</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>Composite_day_dir</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>Composite_day_dir</processor><port>jday</port></sink><source type="processor"><processor>Generate_dates</processor><port>jday</port></source></datalink><datalink><sink type="processor"><processor>Composite_day_dir</processor><port>year</port></sink><source type="processor"><processor>Generate_dates</processor><port>year</port></source></datalink><datalink><sink type="processor"><processor>Composite_day_dir</processor><port>log_dir</port></sink><source type="processor"><processor>Log_dir</processor><port>log_dir</port></source></datalink><datalink><sink type="processor"><processor>Composite_tile_dir</processor><port>day_dir</port></sink><source type="processor"><processor>Composite_day_dir</processor><port>composite_day_dir</port></source></datalink><datalink><sink type="processor"><processor>Composite_tile_dir</processor><port>day_log_dir</port></sink><source type="processor"><processor>Composite_day_dir</processor><port>composite_day_log_dir</port></source></datalink><datalink><sink type="processor"><processor>Composite_tile_dir</processor><port>tile_name</port></sink><source type="processor"><processor>Tile_params</processor><port>tile_name</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09</processor><port>mod03</port></sink><source type="processor"><processor>MOD03</processor><port>mod03</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09</processor><port>sds</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>all_bands</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09</processor><port>modxx</port></sink><source type="processor"><processor>MOD09</processor><port>mod09</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>WMS_Overlay_config</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>WMS_Overlay_config</processor><port>log_dir</port></sink><source type="processor"><processor>Log_dir</processor><port>log_dir</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_filter</processor><port>b_band</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>b_band</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_filter</processor><port>g_band</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>g_band</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_filter</processor><port>r_band</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>r_band</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_filter</processor><port>sds</port></sink><source type="processor"><processor>TIFF_MOD09</processor><port>sds</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_filter</processor><port>tiff</port></sink><source type="processor"><processor>TIFF_MOD09</processor><port>tiff</port></source></datalink><datalink><sink type="processor"><processor>TIFF_cleanup</processor><port>tiff</port></sink><source type="processor"><processor>TIFF_MOD09</processor><port>tiff</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Tricolor</processor><port>b_tiff</port></sink><source type="processor"><processor>TIFF_MOD09_filter</processor><port>b_tiff</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Tricolor</processor><port>g_tiff</port></sink><source type="processor"><processor>TIFF_MOD09_filter</processor><port>g_tiff</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Tricolor</processor><port>r_tiff</port></sink><source type="processor"><processor>TIFF_MOD09_filter</processor><port>r_tiff</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Tricolor</processor><port>output_dir</port></sink><source type="processor"><processor>Granule_dir</processor><port>granule_log_dir</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Tricolor</processor><port>name</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>name</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Tricolor</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>date</port></sink><source type="processor"><processor>Generate_dates</processor><port>date_full</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>log_dir</port></sink><source type="processor"><processor>Sat_day_dir</processor><port>day_log_dir</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>sat_id</port></sink><source type="processor"><processor>Satellites</processor><port>sat_id</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>tiff_tricolor</port></sink><source type="processor"><processor>TIFF_MOD09_Tricolor</processor><port>tiff_tricolor</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>name</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>name</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>rasters_dir</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>rasters_dir</port></source></datalink><datalink><sink type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>vrts_dir</port></sink><source type="processor"><processor>WMS_Overlay_config</processor><port>vrts_dir</port></source></datalink><datalink><sink type="processor"><processor>Log_dir</processor><port>config</port></sink><source type="processor"><processor>Config_parser</processor><port>config</port></source></datalink><datalink><sink type="processor"><processor>Log_dir</processor><port>start_date</port></sink><source type="dataflow"><port>start_date</port></source></datalink><datalink><sink type="processor"><processor>Log_dir</processor><port>stop_date</port></sink><source type="dataflow"><port>stop_date</port></source></datalink><datalink><sink type="dataflow"><port>MOD13</port></sink><source type="processor"><processor>MOD13</processor><port>mod13q1</port></source></datalink><datalink><sink type="dataflow"><port>MCD43</port></sink><source type="processor"><processor>MCD43_tile_pic</processor><port>mcd43a4_jpg</port></source></datalink><datalink><sink type="dataflow"><port>mosaic_jpg</port></sink><source type="processor"><processor>MCD43_mosaic</processor><port>mosaic_jpg</port></source></datalink><datalink><sink type="dataflow"><port>mosaic_tif</port></sink><source type="processor"><processor>MCD43_mosaic</processor><port>mosaic_tif</port></source></datalink><datalink><sink type="dataflow"><port>TIFF_MOD09_Mosaic</port></sink><source type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>tiff_mosaic</port></source></datalink><datalink><sink type="dataflow"><port>TIFF_MOD09_Mosaic_vrt</port></sink><source type="processor"><processor>TIFF_MOD09_Mosaic</processor><port>vrt</port></source></datalink></datalinks></dataflow></workflow>